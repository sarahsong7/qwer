//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Assembly Writer Source Fragment
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.  This method returns true if the
/// machine instruction was sufficiently described to print it, otherwise
/// it returns false.
void X86ATTAsmPrinter::printInstruction(const MachineInstr *MI) {
  static const unsigned OpInfo[] = {
    67108866U,	// PHI
    0U,	// INLINEASM
    0U,	// DBG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// DECLARE
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    67108874U,	// ABS_F
    0U,	// ABS_Fp32
    0U,	// ABS_Fp64
    0U,	// ABS_Fp80
    134217743U,	// ADC16mi
    134217743U,	// ADC16mi8
    134217743U,	// ADC16mr
    201392143U,	// ADC16ri
    201392143U,	// ADC16ri8
    270663695U,	// ADC16rm
    201392143U,	// ADC16rr
    134414357U,	// ADC32mi
    134414357U,	// ADC32mi8
    134414357U,	// ADC32mr
    201392149U,	// ADC32ri
    201392149U,	// ADC32ri8
    337772565U,	// ADC32rm
    201392149U,	// ADC32rr
    134479899U,	// ADC64mi32
    134479899U,	// ADC64mi8
    134479899U,	// ADC64mr
    201392155U,	// ADC64ri32
    201392155U,	// ADC64ri8
    404881435U,	// ADC64rm
    201392155U,	// ADC64rr
    134545441U,	// ADC8mi
    134545441U,	// ADC8mr
    201392161U,	// ADC8ri
    471990305U,	// ADC8rm
    201392161U,	// ADC8rr
    541065255U,	// ADD16i16
    134217772U,	// ADD16mi
    134217772U,	// ADD16mi8
    134217772U,	// ADD16mr
    201392172U,	// ADD16ri
    201392172U,	// ADD16ri8
    270663724U,	// ADD16rm
    201392172U,	// ADD16rr
    543162407U,	// ADD32i32
    134414386U,	// ADD32mi
    134414386U,	// ADD32mi8
    134414386U,	// ADD32mr
    201392178U,	// ADD32ri
    201392178U,	// ADD32ri8
    337772594U,	// ADD32rm
    201392178U,	// ADD32rr
    134479928U,	// ADD64mi32
    134479928U,	// ADD64mi8
    134479928U,	// ADD64mr
    201392184U,	// ADD64ri32
    201392184U,	// ADD64ri8
    404881464U,	// ADD64rm
    201392184U,	// ADD64rr
    545259559U,	// ADD8i8
    134545470U,	// ADD8mi
    134545470U,	// ADD8mr
    201392190U,	// ADD8ri
    471990334U,	// ADD8rm
    201392190U,	// ADD8rr
    603979844U,	// ADDPDrm
    201392196U,	// ADDPDrr
    603979851U,	// ADDPSrm
    201392203U,	// ADDPSrr
    671088722U,	// ADDSDrm
    671088722U,	// ADDSDrm_Int
    201392210U,	// ADDSDrr
    201392210U,	// ADDSDrr_Int
    738197593U,	// ADDSSrm
    738197593U,	// ADDSSrm_Int
    201392217U,	// ADDSSrr
    201392217U,	// ADDSSrr_Int
    603979872U,	// ADDSUBPDrm
    201392224U,	// ADDSUBPDrr
    603979882U,	// ADDSUBPSrm
    201392234U,	// ADDSUBPSrr
    805306484U,	// ADD_F32m
    872415355U,	// ADD_F64m
    939524226U,	// ADD_FI16m
    1017118858U,	// ADD_FI32m
    547356818U,	// ADD_FPrST0
    547356825U,	// ADD_FST0r
    0U,	// ADD_Fp32
    0U,	// ADD_Fp32m
    0U,	// ADD_Fp64
    0U,	// ADD_Fp64m
    0U,	// ADD_Fp64m32
    0U,	// ADD_Fp80
    0U,	// ADD_Fp80m32
    0U,	// ADD_Fp80m64
    0U,	// ADD_FpI16m32
    0U,	// ADD_FpI16m64
    0U,	// ADD_FpI16m80
    0U,	// ADD_FpI32m32
    0U,	// ADD_FpI32m64
    0U,	// ADD_FpI32m80
    547356831U,	// ADD_FrST0
    67109037U,	// ADJCALLSTACKDOWN32
    67109037U,	// ADJCALLSTACKDOWN64
    67109055U,	// ADJCALLSTACKUP32
    67109055U,	// ADJCALLSTACKUP64
    134217935U,	// AND16mi
    134217935U,	// AND16mi8
    134217935U,	// AND16mr
    201392335U,	// AND16ri
    201392335U,	// AND16ri8
    270663887U,	// AND16rm
    201392335U,	// AND16rr
    134414549U,	// AND32mi
    134414549U,	// AND32mi8
    134414549U,	// AND32mr
    201392341U,	// AND32ri
    201392341U,	// AND32ri8
    337772757U,	// AND32rm
    201392341U,	// AND32rr
    134480091U,	// AND64mi32
    134480091U,	// AND64mi8
    134480091U,	// AND64mr
    201392347U,	// AND64ri32
    201392347U,	// AND64ri8
    404881627U,	// AND64rm
    201392347U,	// AND64rr
    134545633U,	// AND8mi
    134545633U,	// AND8mr
    201392353U,	// AND8ri
    471990497U,	// AND8rm
    201392353U,	// AND8rr
    603980007U,	// ANDNPDrm
    201392359U,	// ANDNPDrr
    603980015U,	// ANDNPSrm
    201392367U,	// ANDNPSrr
    603980023U,	// ANDPDrm
    201392375U,	// ANDPDrr
    603980030U,	// ANDPSrm
    201392382U,	// ANDPSrr
    67109125U,	// ATOMADD6432
    67109146U,	// ATOMAND16
    67109165U,	// ATOMAND32
    67109184U,	// ATOMAND64
    67109203U,	// ATOMAND6432
    67109224U,	// ATOMAND8
    67109242U,	// ATOMMAX16
    67109261U,	// ATOMMAX32
    67109280U,	// ATOMMAX64
    67109299U,	// ATOMMIN16
    67109318U,	// ATOMMIN32
    67109337U,	// ATOMMIN64
    67109356U,	// ATOMNAND16
    67109376U,	// ATOMNAND32
    67109396U,	// ATOMNAND64
    67109416U,	// ATOMNAND6432
    67109438U,	// ATOMNAND8
    67109457U,	// ATOMOR16
    67109475U,	// ATOMOR32
    67109493U,	// ATOMOR64
    67109511U,	// ATOMOR6432
    67109531U,	// ATOMOR8
    67109548U,	// ATOMSUB6432
    67109569U,	// ATOMSWAP6432
    67109591U,	// ATOMUMAX16
    67109611U,	// ATOMUMAX32
    67109631U,	// ATOMUMAX64
    67109651U,	// ATOMUMIN16
    67109671U,	// ATOMUMIN32
    67109691U,	// ATOMUMIN64
    67109711U,	// ATOMXOR16
    67109730U,	// ATOMXOR32
    67109749U,	// ATOMXOR64
    67109768U,	// ATOMXOR6432
    67109789U,	// ATOMXOR8
    1086325679U,	// BLENDPDrmi
    1140851631U,	// BLENDPDrri
    1086325688U,	// BLENDPSrmi
    1140851640U,	// BLENDPSrri
    1207960513U,	// BLENDVPDrm0
    201393089U,	// BLENDVPDrr0
    1207960530U,	// BLENDVPSrm0
    201393106U,	// BLENDVPSrr0
    1277297635U,	// BSF16rm
    1344406499U,	// BSF16rr
    1411515369U,	// BSF32rm
    1344406505U,	// BSF32rr
    1476396015U,	// BSF64rm
    1344406511U,	// BSF64rr
    1277297653U,	// BSR16rm
    1344406517U,	// BSR16rr
    1411515387U,	// BSR32rm
    1344406523U,	// BSR32rr
    1476396033U,	// BSR64rm
    1344406529U,	// BSR64rr
    547357703U,	// BSWAP32r
    547357711U,	// BSWAP64r
    134218775U,	// BT16mi8
    1344406551U,	// BT16ri8
    1344406551U,	// BT16rr
    134415388U,	// BT32mi8
    1344406556U,	// BT32ri8
    1344406556U,	// BT32rr
    134480929U,	// BT64mi8
    1344406561U,	// BT64ri8
    1344406561U,	// BT64rr
    1017119782U,	// CALL32m
    547357734U,	// CALL32r
    1543504934U,	// CALL64m
    1621099565U,	// CALL64pcrel32
    547357734U,	// CALL64r
    1621099565U,	// CALLpcrel32
    67109939U,	// CBW
    67109944U,	// CDQ
    67109949U,	// CDQE
    67109954U,	// CHS_F
    0U,	// CHS_Fp32
    0U,	// CHS_Fp64
    0U,	// CHS_Fp80
    1677722695U,	// CLFLUSH
    270664784U,	// CMOVA16rm
    201393232U,	// CMOVA16rr
    337773648U,	// CMOVA32rm
    201393232U,	// CMOVA32rr
    404882512U,	// CMOVA64rm
    201393232U,	// CMOVA64rr
    270664791U,	// CMOVAE16rm
    201393239U,	// CMOVAE16rr
    337773655U,	// CMOVAE32rm
    201393239U,	// CMOVAE32rr
    404882519U,	// CMOVAE64rm
    201393239U,	// CMOVAE64rr
    270664799U,	// CMOVB16rm
    201393247U,	// CMOVB16rr
    337773663U,	// CMOVB32rm
    201393247U,	// CMOVB32rr
    404882527U,	// CMOVB64rm
    201393247U,	// CMOVB64rr
    270664806U,	// CMOVBE16rm
    201393254U,	// CMOVBE16rr
    337773670U,	// CMOVBE32rm
    201393254U,	// CMOVBE32rr
    404882534U,	// CMOVBE64rm
    201393254U,	// CMOVBE64rr
    551552110U,	// CMOVBE_F
    0U,	// CMOVBE_Fp32
    0U,	// CMOVBE_Fp64
    0U,	// CMOVBE_Fp80
    551552119U,	// CMOVB_F
    0U,	// CMOVB_Fp32
    0U,	// CMOVB_Fp64
    0U,	// CMOVB_Fp80
    270664831U,	// CMOVE16rm
    201393279U,	// CMOVE16rr
    337773695U,	// CMOVE32rm
    201393279U,	// CMOVE32rr
    404882559U,	// CMOVE64rm
    201393279U,	// CMOVE64rr
    551552134U,	// CMOVE_F
    0U,	// CMOVE_Fp32
    0U,	// CMOVE_Fp64
    0U,	// CMOVE_Fp80
    270664846U,	// CMOVG16rm
    201393294U,	// CMOVG16rr
    337773710U,	// CMOVG32rm
    201393294U,	// CMOVG32rr
    404882574U,	// CMOVG64rm
    201393294U,	// CMOVG64rr
    270664853U,	// CMOVGE16rm
    201393301U,	// CMOVGE16rr
    337773717U,	// CMOVGE32rm
    201393301U,	// CMOVGE32rr
    404882581U,	// CMOVGE64rm
    201393301U,	// CMOVGE64rr
    270664861U,	// CMOVL16rm
    201393309U,	// CMOVL16rr
    337773725U,	// CMOVL32rm
    201393309U,	// CMOVL32rr
    404882589U,	// CMOVL64rm
    201393309U,	// CMOVL64rr
    270664868U,	// CMOVLE16rm
    201393316U,	// CMOVLE16rr
    337773732U,	// CMOVLE32rm
    201393316U,	// CMOVLE32rr
    404882596U,	// CMOVLE64rm
    201393316U,	// CMOVLE64rr
    551552172U,	// CMOVNBE_F
    0U,	// CMOVNBE_Fp32
    0U,	// CMOVNBE_Fp64
    0U,	// CMOVNBE_Fp80
    551552182U,	// CMOVNB_F
    0U,	// CMOVNB_Fp32
    0U,	// CMOVNB_Fp64
    0U,	// CMOVNB_Fp80
    270664895U,	// CMOVNE16rm
    201393343U,	// CMOVNE16rr
    337773759U,	// CMOVNE32rm
    201393343U,	// CMOVNE32rr
    404882623U,	// CMOVNE64rm
    201393343U,	// CMOVNE64rr
    551552199U,	// CMOVNE_F
    0U,	// CMOVNE_Fp32
    0U,	// CMOVNE_Fp64
    0U,	// CMOVNE_Fp80
    270664912U,	// CMOVNO16rm
    201393360U,	// CMOVNO16rr
    337773776U,	// CMOVNO32rm
    201393360U,	// CMOVNO32rr
    404882640U,	// CMOVNO64rm
    201393360U,	// CMOVNO64rr
    270664920U,	// CMOVNP16rm
    201393368U,	// CMOVNP16rr
    337773784U,	// CMOVNP32rm
    201393368U,	// CMOVNP32rr
    404882648U,	// CMOVNP64rm
    201393368U,	// CMOVNP64rr
    551552224U,	// CMOVNP_F
    0U,	// CMOVNP_Fp32
    0U,	// CMOVNP_Fp64
    0U,	// CMOVNP_Fp80
    270664937U,	// CMOVNS16rm
    201393385U,	// CMOVNS16rr
    337773801U,	// CMOVNS32rm
    201393385U,	// CMOVNS32rr
    404882665U,	// CMOVNS64rm
    201393385U,	// CMOVNS64rr
    270664945U,	// CMOVO16rm
    201393393U,	// CMOVO16rr
    337773809U,	// CMOVO32rm
    201393393U,	// CMOVO32rr
    404882673U,	// CMOVO64rm
    201393393U,	// CMOVO64rr
    270664952U,	// CMOVP16rm
    201393400U,	// CMOVP16rr
    337773816U,	// CMOVP32rm
    201393400U,	// CMOVP32rr
    404882680U,	// CMOVP64rm
    201393400U,	// CMOVP64rr
    551552255U,	// CMOVP_F
    0U,	// CMOVP_Fp32
    0U,	// CMOVP_Fp64
    0U,	// CMOVP_Fp80
    270664968U,	// CMOVS16rm
    201393416U,	// CMOVS16rr
    337773832U,	// CMOVS32rm
    201393416U,	// CMOVS32rr
    404882696U,	// CMOVS64rm
    201393416U,	// CMOVS64rr
    67110159U,	// CMOV_FR32
    67110178U,	// CMOV_FR64
    67110197U,	// CMOV_V1I64
    67110217U,	// CMOV_V2F64
    67110237U,	// CMOV_V2I64
    67110257U,	// CMOV_V4F32
    134219141U,	// CMP16mi
    134219141U,	// CMP16mi8
    134219141U,	// CMP16mr
    1344406917U,	// CMP16ri
    1344406917U,	// CMP16ri8
    1277298053U,	// CMP16rm
    1344406917U,	// CMP16rr
    134415755U,	// CMP32mi
    134415755U,	// CMP32mi8
    134415755U,	// CMP32mr
    1344406923U,	// CMP32ri
    1344406923U,	// CMP32ri8
    1411515787U,	// CMP32rm
    1344406923U,	// CMP32rr
    134481297U,	// CMP64mi32
    134481297U,	// CMP64mi8
    134481297U,	// CMP64mr
    1344406929U,	// CMP64ri32
    1344406929U,	// CMP64ri8
    1476396433U,	// CMP64rm
    1344406929U,	// CMP64rr
    134546839U,	// CMP8mi
    134546839U,	// CMP8mr
    1344406935U,	// CMP8ri
    1747060119U,	// CMP8rm
    1344406935U,	// CMP8rr
    1829111197U,	// CMPPDrmi
    1896285597U,	// CMPPDrri
    1831208349U,	// CMPPSrmi
    1898382749U,	// CMPPSrri
    1833436573U,	// CMPSDrm
    1900479901U,	// CMPSDrr
    1835599261U,	// CMPSSrm
    1902577053U,	// CMPSSrr
    67110305U,	// COS_F
    0U,	// COS_Fp32
    0U,	// COS_Fp64
    0U,	// COS_Fp80
    67110310U,	// CQO
    293602731U,	// CRC32m16
    360711595U,	// CRC32m32
    494929323U,	// CRC32m8
    201983403U,	// CRC32r16
    201983403U,	// CRC32r32
    201983403U,	// CRC32r8
    427820459U,	// CRC64m64
    201983403U,	// CRC64r64
    1946158515U,	// CVTSD2SSrm
    1344406963U,	// CVTSD2SSrr
    1476396477U,	// CVTSI2SD64rm
    1344406973U,	// CVTSI2SD64rr
    1411515848U,	// CVTSI2SDrm
    1344406984U,	// CVTSI2SDrr
    1476396498U,	// CVTSI2SS64rm
    1344406994U,	// CVTSI2SS64rr
    1411515869U,	// CVTSI2SSrm
    1344407005U,	// CVTSI2SSrr
    2013267431U,	// CVTSS2SDrm
    1344407015U,	// CVTSS2SDrr
    1946158577U,	// CVTTSD2SI64rm
    1344407025U,	// CVTTSD2SI64rr
    1946158589U,	// CVTTSD2SIrm
    1344407037U,	// CVTTSD2SIrr
    2013267464U,	// CVTTSS2SI64rm
    1344407048U,	// CVTTSS2SI64rr
    2013267476U,	// CVTTSS2SIrm
    1344407060U,	// CVTTSS2SIrr
    67110431U,	// CWD
    67110436U,	// CWDE
    939525673U,	// DEC16m
    547358249U,	// DEC16r
    1017120303U,	// DEC32m
    547358255U,	// DEC32r
    939525673U,	// DEC64_16m
    547358249U,	// DEC64_16r
    1017120303U,	// DEC64_32m
    547358255U,	// DEC64_32r
    1543505461U,	// DEC64m
    547358261U,	// DEC64r
    1677723195U,	// DEC8m
    547358267U,	// DEC8r
    939525697U,	// DIV16m
    547358273U,	// DIV16r
    1017120327U,	// DIV32m
    547358279U,	// DIV32r
    1543505485U,	// DIV64m
    547358285U,	// DIV64r
    1677723219U,	// DIV8m
    547358291U,	// DIV8r
    603981401U,	// DIVPDrm
    201393753U,	// DIVPDrr
    603981408U,	// DIVPSrm
    201393760U,	// DIVPSrr
    805308007U,	// DIVR_F32m
    872416879U,	// DIVR_F64m
    939525751U,	// DIVR_FI16m
    1017120384U,	// DIVR_FI32m
    547358345U,	// DIVR_FPrST0
    547358352U,	// DIVR_FST0r
    0U,	// DIVR_Fp32m
    0U,	// DIVR_Fp64m
    0U,	// DIVR_Fp64m32
    0U,	// DIVR_Fp80m32
    0U,	// DIVR_Fp80m64
    0U,	// DIVR_FpI16m32
    0U,	// DIVR_FpI16m64
    0U,	// DIVR_FpI16m80
    0U,	// DIVR_FpI32m32
    0U,	// DIVR_FpI32m64
    0U,	// DIVR_FpI32m80
    547358359U,	// DIVR_FrST0
    671090341U,	// DIVSDrm
    671090341U,	// DIVSDrm_Int
    201393829U,	// DIVSDrr
    201393829U,	// DIVSDrr_Int
    738199212U,	// DIVSSrm
    738199212U,	// DIVSSrm_Int
    201393836U,	// DIVSSrr
    201393836U,	// DIVSSrr_Int
    805308083U,	// DIV_F32m
    872416954U,	// DIV_F64m
    939525825U,	// DIV_FI16m
    1017120457U,	// DIV_FI32m
    547358417U,	// DIV_FPrST0
    547358425U,	// DIV_FST0r
    0U,	// DIV_Fp32
    0U,	// DIV_Fp32m
    0U,	// DIV_Fp64
    0U,	// DIV_Fp64m
    0U,	// DIV_Fp64m32
    0U,	// DIV_Fp80
    0U,	// DIV_Fp80m32
    0U,	// DIV_Fp80m64
    0U,	// DIV_FpI16m32
    0U,	// DIV_FpI16m64
    0U,	// DIV_FpI16m80
    0U,	// DIV_FpI32m32
    0U,	// DIV_FpI32m64
    0U,	// DIV_FpI32m80
    547358431U,	// DIV_FrST0
    1086326510U,	// DPPDrmi
    1140852462U,	// DPPDrri
    1086326516U,	// DPPSrmi
    1140852468U,	// DPPSrri
    228673274U,	// DWARF_LOC
    547358464U,	// EH_RETURN
    547358464U,	// EH_RETURN64
    2110457623U,	// EXTRACTPSmr
    202016535U,	// EXTRACTPSrr
    939525922U,	// FLDCW16m
    939525929U,	// FNSTCW16m
    67110705U,	// FNSTSW8r
    67110712U,	// FP32_TO_INT16_IN_MEM
    67110743U,	// FP32_TO_INT32_IN_MEM
    67110774U,	// FP32_TO_INT64_IN_MEM
    67110805U,	// FP64_TO_INT16_IN_MEM
    67110836U,	// FP64_TO_INT32_IN_MEM
    67110867U,	// FP64_TO_INT64_IN_MEM
    67110898U,	// FP80_TO_INT16_IN_MEM
    67110929U,	// FP80_TO_INT32_IN_MEM
    67110960U,	// FP80_TO_INT64_IN_MEM
    67110991U,	// FP_REG_KILL
    1411516509U,	// FS_MOV32rm
    0U,	// FpGET_ST0_32
    0U,	// FpGET_ST0_64
    0U,	// FpGET_ST0_80
    0U,	// FpGET_ST1_32
    0U,	// FpGET_ST1_64
    0U,	// FpGET_ST1_80
    0U,	// FpSET_ST0_32
    0U,	// FpSET_ST0_64
    0U,	// FpSET_ST0_80
    0U,	// FpSET_ST1_32
    0U,	// FpSET_ST1_64
    0U,	// FpSET_ST1_80
    603980007U,	// FsANDNPDrm
    201392359U,	// FsANDNPDrr
    603980015U,	// FsANDNPSrm
    201392367U,	// FsANDNPSrr
    603980023U,	// FsANDPDrm
    201392375U,	// FsANDPDrr
    603980030U,	// FsANDPSrm
    201392382U,	// FsANDPSrr
    536938599U,	// FsFLD0SD
    536938599U,	// FsFLD0SS
    2147485805U,	// FsMOVAPDrm
    1344407661U,	// FsMOVAPDrr
    2147485813U,	// FsMOVAPSrm
    1344407669U,	// FsMOVAPSrr
    603981949U,	// FsORPDrm
    201394301U,	// FsORPDrr
    603981955U,	// FsORPSrm
    201394307U,	// FsORPSrr
    603981961U,	// FsXORPDrm
    201394313U,	// FsXORPDrr
    603981968U,	// FsXORPSrm
    201394320U,	// FsXORPSrr
    1411516567U,	// GS_MOV32rm
    603981985U,	// HADDPDrm
    201394337U,	// HADDPDrr
    603981993U,	// HADDPSrm
    201394345U,	// HADDPSrr
    603982001U,	// HSUBPDrm
    201394353U,	// HSUBPDrr
    603982009U,	// HSUBPSrm
    201394361U,	// HSUBPSrr
    939526337U,	// IDIV16m
    547358913U,	// IDIV16r
    1017120968U,	// IDIV32m
    547358920U,	// IDIV32r
    1543506127U,	// IDIV64m
    547358927U,	// IDIV64r
    1677723862U,	// IDIV8m
    547358934U,	// IDIV8r
    939526365U,	// ILD_F16m
    1017120996U,	// ILD_F32m
    1543506155U,	// ILD_F64m
    0U,	// ILD_Fp16m32
    0U,	// ILD_Fp16m64
    0U,	// ILD_Fp16m80
    0U,	// ILD_Fp32m32
    0U,	// ILD_Fp32m64
    0U,	// ILD_Fp32m80
    0U,	// ILD_Fp64m32
    0U,	// ILD_Fp64m64
    0U,	// ILD_Fp64m80
    939526387U,	// IMUL16m
    547358963U,	// IMUL16r
    270665971U,	// IMUL16rm
    2112620787U,	// IMUL16rmi
    2112620787U,	// IMUL16rmi8
    201394419U,	// IMUL16rr
    202017011U,	// IMUL16rri
    202017011U,	// IMUL16rri8
    1017121018U,	// IMUL32m
    547358970U,	// IMUL32r
    337774842U,	// IMUL32rm
    2114717946U,	// IMUL32rmi
    2114717946U,	// IMUL32rmi8
    201394426U,	// IMUL32rr
    202017018U,	// IMUL32rri
    202017018U,	// IMUL32rri8
    1543506177U,	// IMUL64m
    547358977U,	// IMUL64r
    404883713U,	// IMUL64rm
    2116815105U,	// IMUL64rmi32
    2116815105U,	// IMUL64rmi8
    201394433U,	// IMUL64rr
    202017025U,	// IMUL64rri32
    202017025U,	// IMUL64rri8
    1677723912U,	// IMUL8m
    547358984U,	// IMUL8r
    541067535U,	// IN16ri
    67111188U,	// IN16rr
    543164705U,	// IN32ri
    67111206U,	// IN32rr
    545261876U,	// IN8ri
    67111225U,	// IN8rr
    939526470U,	// INC16m
    547359046U,	// INC16r
    1017121100U,	// INC32m
    547359052U,	// INC32r
    939526470U,	// INC64_16m
    547359046U,	// INC64_16r
    1017121100U,	// INC64_32m
    547359052U,	// INC64_32r
    1543506258U,	// INC64m
    547359058U,	// INC64r
    1677723992U,	// INC8m
    547359064U,	// INC8r
    1111492958U,	// INSERTPSrm
    1140853086U,	// INSERTPSrr
    547359080U,	// INT
    67111277U,	// INT3
    939526515U,	// ISTT_FP16m
    1017121148U,	// ISTT_FP32m
    1543506309U,	// ISTT_FP64m
    0U,	// ISTT_Fp16m32
    0U,	// ISTT_Fp16m64
    0U,	// ISTT_Fp16m80
    0U,	// ISTT_Fp32m32
    0U,	// ISTT_Fp32m64
    0U,	// ISTT_Fp32m80
    0U,	// ISTT_Fp64m32
    0U,	// ISTT_Fp64m64
    0U,	// ISTT_Fp64m80
    939526543U,	// IST_F16m
    1017121174U,	// IST_F32m
    939526557U,	// IST_FP16m
    1017121189U,	// IST_FP32m
    1543506349U,	// IST_FP64m
    0U,	// IST_Fp16m32
    0U,	// IST_Fp16m64
    0U,	// IST_Fp16m80
    0U,	// IST_Fp32m32
    0U,	// IST_Fp32m64
    0U,	// IST_Fp32m80
    0U,	// IST_Fp64m32
    0U,	// IST_Fp64m64
    0U,	// IST_Fp64m80
    1833436573U,	// Int_CMPSDrm
    1900479901U,	// Int_CMPSDrr
    1835599261U,	// Int_CMPSSrm
    1902577053U,	// Int_CMPSSrr
    2147486134U,	// Int_COMISDrm
    1344407990U,	// Int_COMISDrr
    2147486142U,	// Int_COMISSrm
    1344407998U,	// Int_COMISSrr
    1476397510U,	// Int_CVTDQ2PDrm
    1344408006U,	// Int_CVTDQ2PDrr
    2214595024U,	// Int_CVTDQ2PSrm
    1344408016U,	// Int_CVTDQ2PSrr
    2147486170U,	// Int_CVTPD2DQrm
    1344408026U,	// Int_CVTPD2DQrr
    2147486180U,	// Int_CVTPD2PIrm
    1344408036U,	// Int_CVTPD2PIrr
    2147486190U,	// Int_CVTPD2PSrm
    1344408046U,	// Int_CVTPD2PSrr
    1476397560U,	// Int_CVTPI2PDrm
    1344408056U,	// Int_CVTPI2PDrr
    404883970U,	// Int_CVTPI2PSrm
    201394690U,	// Int_CVTPI2PSrr
    2147486220U,	// Int_CVTPS2DQrm
    1344408076U,	// Int_CVTPS2DQrr
    1946159638U,	// Int_CVTPS2PDrm
    1344408086U,	// Int_CVTPS2PDrr
    1946159648U,	// Int_CVTPS2PIrm
    1344408096U,	// Int_CVTPS2PIrr
    2147486250U,	// Int_CVTSD2SI64rm
    1344408106U,	// Int_CVTSD2SI64rr
    2147486261U,	// Int_CVTSD2SIrm
    1344408117U,	// Int_CVTSD2SIrr
    671090099U,	// Int_CVTSD2SSrm
    201393587U,	// Int_CVTSD2SSrr
    404882877U,	// Int_CVTSI2SD64rm
    201393597U,	// Int_CVTSI2SD64rr
    337774024U,	// Int_CVTSI2SDrm
    201393608U,	// Int_CVTSI2SDrr
    404882898U,	// Int_CVTSI2SS64rm
    201393618U,	// Int_CVTSI2SS64rr
    337774045U,	// Int_CVTSI2SSrm
    201393629U,	// Int_CVTSI2SSrr
    738199015U,	// Int_CVTSS2SDrm
    201393639U,	// Int_CVTSS2SDrr
    2013268543U,	// Int_CVTSS2SI64rm
    1344408127U,	// Int_CVTSS2SI64rr
    2013268554U,	// Int_CVTSS2SIrm
    1344408138U,	// Int_CVTSS2SIrr
    2147486292U,	// Int_CVTTPD2DQrm
    1344408148U,	// Int_CVTTPD2DQrr
    2147486303U,	// Int_CVTTPD2PIrm
    1344408159U,	// Int_CVTTPD2PIrr
    2147486314U,	// Int_CVTTPS2DQrm
    1344408170U,	// Int_CVTTPS2DQrr
    1946159733U,	// Int_CVTTPS2PIrm
    1344408181U,	// Int_CVTTPS2PIrr
    2147485169U,	// Int_CVTTSD2SI64rm
    1344407025U,	// Int_CVTTSD2SI64rr
    2147485181U,	// Int_CVTTSD2SIrm
    1344407037U,	// Int_CVTTSD2SIrr
    2013267464U,	// Int_CVTTSS2SI64rm
    1344407048U,	// Int_CVTTSS2SI64rr
    2013267476U,	// Int_CVTTSS2SIrm
    1344407060U,	// Int_CVTTSS2SIrr
    2147486336U,	// Int_UCOMISDrm
    1344408192U,	// Int_UCOMISDrr
    2147486345U,	// Int_UCOMISSrm
    1344408201U,	// Int_UCOMISSrr
    1621101202U,	// JA
    1621101202U,	// JA8
    1621101206U,	// JAE
    1621101206U,	// JAE8
    1621101211U,	// JB
    1621101211U,	// JB8
    1621101215U,	// JBE
    1621101215U,	// JBE8
    1621101220U,	// JCXZ8
    1621101226U,	// JE
    1621101226U,	// JE8
    1621101230U,	// JG
    1621101230U,	// JG8
    1621101234U,	// JGE
    1621101234U,	// JGE8
    1621101239U,	// JL
    1621101239U,	// JL8
    1621101243U,	// JLE
    1621101243U,	// JLE8
    1621101248U,	// JMP
    1017121477U,	// JMP32m
    547359429U,	// JMP32r
    1543506636U,	// JMP64m
    547359436U,	// JMP64r
    1621101248U,	// JMP8
    1621101267U,	// JNE
    1621101267U,	// JNE8
    1621101272U,	// JNO
    1621101272U,	// JNO8
    1621101277U,	// JNP
    1621101277U,	// JNP8
    1621101282U,	// JNS
    1621101282U,	// JNS8
    1621101287U,	// JO
    1621101287U,	// JO8
    1621101291U,	// JP
    1621101291U,	// JP8
    1621101295U,	// JS
    1621101295U,	// JS8
    67111667U,	// LAHF
    134220536U,	// LCMPXCHG16
    134417160U,	// LCMPXCHG32
    174066456U,	// LCMPXCHG64
    134548264U,	// LCMPXCHG8
    1017121592U,	// LCMPXCHG8B
    2214595401U,	// LDDQUrm
    1017121616U,	// LDMXCSR
    67111769U,	// LD_F0
    67111774U,	// LD_F1
    805309283U,	// LD_F32m
    872418153U,	// LD_F64m
    2281704303U,	// LD_F80m
    0U,	// LD_Fp032
    0U,	// LD_Fp064
    0U,	// LD_Fp080
    0U,	// LD_Fp132
    0U,	// LD_Fp164
    0U,	// LD_Fp180
    0U,	// LD_Fp32m
    0U,	// LD_Fp32m64
    0U,	// LD_Fp32m80
    0U,	// LD_Fp64m
    0U,	// LD_Fp64m80
    0U,	// LD_Fp80m
    547359605U,	// LD_Frr
    1411517306U,	// LEA16r
    2348813184U,	// LEA32r
    2415922048U,	// LEA64_32r
    2483030918U,	// LEA64r
    67111820U,	// LEAVE
    67111820U,	// LEAVE64
    67111826U,	// LFENCE
    134220697U,	// LOCK_ADD16mi
    134220697U,	// LOCK_ADD16mi8
    134220697U,	// LOCK_ADD16mr
    134417317U,	// LOCK_ADD32mi
    134417317U,	// LOCK_ADD32mi8
    134417317U,	// LOCK_ADD32mr
    134482865U,	// LOCK_ADD64mi32
    134482865U,	// LOCK_ADD64mi8
    134482865U,	// LOCK_ADD64mr
    134548413U,	// LOCK_ADD8mi
    134548413U,	// LOCK_ADD8mr
    939527113U,	// LOCK_DEC16m
    1017121749U,	// LOCK_DEC32m
    1543506913U,	// LOCK_DEC64m
    1677724653U,	// LOCK_DEC8m
    939527161U,	// LOCK_INC16m
    1017121797U,	// LOCK_INC32m
    1543506961U,	// LOCK_INC64m
    1677724701U,	// LOCK_INC8m
    134220841U,	// LOCK_SUB16mi
    134220841U,	// LOCK_SUB16mi8
    134220841U,	// LOCK_SUB16mr
    134417461U,	// LOCK_SUB32mi
    134417461U,	// LOCK_SUB32mi8
    134417461U,	// LOCK_SUB32mr
    134483009U,	// LOCK_SUB64mi32
    134483009U,	// LOCK_SUB64mi8
    134483009U,	// LOCK_SUB64mr
    134548557U,	// LOCK_SUB8mi
    134548557U,	// LOCK_SUB8mr
    2111966297U,	// LXADD16
    2114063462U,	// LXADD32
    2116160627U,	// LXADD64
    2122321023U,	// LXADD8
    1344408716U,	// MASKMOVDQU
    1344408716U,	// MASKMOVDQU64
    603983000U,	// MAXPDrm
    603983000U,	// MAXPDrm_Int
    201395352U,	// MAXPDrr
    201395352U,	// MAXPDrr_Int
    603983007U,	// MAXPSrm
    603983007U,	// MAXPSrm_Int
    201395359U,	// MAXPSrr
    201395359U,	// MAXPSrr_Int
    671091878U,	// MAXSDrm
    671091878U,	// MAXSDrm_Int
    201395366U,	// MAXSDrr
    201395366U,	// MAXSDrr_Int
    738200749U,	// MAXSSrm
    738200749U,	// MAXSSrm_Int
    201395373U,	// MAXSSrr
    201395373U,	// MAXSSrr_Int
    67112116U,	// MFENCE
    603983035U,	// MINPDrm
    603983035U,	// MINPDrm_Int
    201395387U,	// MINPDrr
    201395387U,	// MINPDrr_Int
    603983042U,	// MINPSrm
    603983042U,	// MINPSrm_Int
    201395394U,	// MINPSrr
    201395394U,	// MINPSrr_Int
    671091913U,	// MINSDrm
    671091913U,	// MINSDrm_Int
    201395401U,	// MINSDrr
    201395401U,	// MINSDrr_Int
    738200784U,	// MINSSrm
    738200784U,	// MINSSrm_Int
    201395408U,	// MINSSrr
    201395408U,	// MINSSrr_Int
    2147486180U,	// MMX_CVTPD2PIrm
    1344408036U,	// MMX_CVTPD2PIrr
    1476397560U,	// MMX_CVTPI2PDrm
    1344408056U,	// MMX_CVTPI2PDrr
    1476397570U,	// MMX_CVTPI2PSrm
    1344408066U,	// MMX_CVTPI2PSrr
    1946159648U,	// MMX_CVTPS2PIrm
    1344408096U,	// MMX_CVTPS2PIrr
    2147486303U,	// MMX_CVTTPD2PIrm
    1344408159U,	// MMX_CVTTPD2PIrr
    1946159733U,	// MMX_CVTTPS2PIrm
    1344408181U,	// MMX_CVTTPS2PIrr
    67112151U,	// MMX_EMMS
    67112156U,	// MMX_FEMMS
    1344408802U,	// MMX_MASKMOVQ
    1344408802U,	// MMX_MASKMOVQ64
    1344408812U,	// MMX_MOVD64from64rr
    134417644U,	// MMX_MOVD64mr
    1411517676U,	// MMX_MOVD64rm
    1344408812U,	// MMX_MOVD64rr
    1344408812U,	// MMX_MOVD64rrv164
    1344408812U,	// MMX_MOVD64to64rr
    1344408818U,	// MMX_MOVDQ2Qrr
    134483195U,	// MMX_MOVNTQmr
    1344408835U,	// MMX_MOVQ2DQrr
    1344408835U,	// MMX_MOVQ2FR64rr
    134483212U,	// MMX_MOVQ64mr
    1476398348U,	// MMX_MOVQ64rm
    1344408844U,	// MMX_MOVQ64rr
    1411517676U,	// MMX_MOVZDI2PDIrm
    1344408812U,	// MMX_MOVZDI2PDIrr
    404884754U,	// MMX_PACKSSDWrm
    201395474U,	// MMX_PACKSSDWrr
    404884764U,	// MMX_PACKSSWBrm
    201395484U,	// MMX_PACKSSWBrr
    404884774U,	// MMX_PACKUSWBrm
    201395494U,	// MMX_PACKUSWBrr
    404884784U,	// MMX_PADDBrm
    201395504U,	// MMX_PADDBrr
    404884791U,	// MMX_PADDDrm
    201395511U,	// MMX_PADDDrr
    404884798U,	// MMX_PADDQrm
    201395518U,	// MMX_PADDQrr
    404884805U,	// MMX_PADDSBrm
    201395525U,	// MMX_PADDSBrr
    404884813U,	// MMX_PADDSWrm
    201395533U,	// MMX_PADDSWrr
    404884821U,	// MMX_PADDUSBrm
    201395541U,	// MMX_PADDUSBrr
    404884830U,	// MMX_PADDUSWrm
    201395550U,	// MMX_PADDUSWrr
    404884839U,	// MMX_PADDWrm
    201395559U,	// MMX_PADDWrr
    404884846U,	// MMX_PANDNrm
    201395566U,	// MMX_PANDNrr
    404884853U,	// MMX_PANDrm
    201395573U,	// MMX_PANDrr
    404884859U,	// MMX_PAVGBrm
    201395579U,	// MMX_PAVGBrr
    404884866U,	// MMX_PAVGWrm
    201395586U,	// MMX_PAVGWrr
    404884873U,	// MMX_PCMPEQBrm
    201395593U,	// MMX_PCMPEQBrr
    404884882U,	// MMX_PCMPEQDrm
    201395602U,	// MMX_PCMPEQDrr
    404884891U,	// MMX_PCMPEQWrm
    201395611U,	// MMX_PCMPEQWrr
    404884900U,	// MMX_PCMPGTBrm
    201395620U,	// MMX_PCMPGTBrr
    404884909U,	// MMX_PCMPGTDrm
    201395629U,	// MMX_PCMPGTDrr
    404884918U,	// MMX_PCMPGTWrm
    201395638U,	// MMX_PCMPGTWrr
    202018239U,	// MMX_PEXTRWri
    1117785543U,	// MMX_PINSRWrmi
    1140854215U,	// MMX_PINSRWrri
    404884943U,	// MMX_PMADDWDrm
    201395663U,	// MMX_PMADDWDrr
    404884952U,	// MMX_PMAXSWrm
    201395672U,	// MMX_PMAXSWrr
    404884960U,	// MMX_PMAXUBrm
    201395680U,	// MMX_PMAXUBrr
    404884968U,	// MMX_PMINSWrm
    201395688U,	// MMX_PMINSWrr
    404884976U,	// MMX_PMINUBrm
    201395696U,	// MMX_PMINUBrr
    1344409080U,	// MMX_PMOVMSKBrr
    404884994U,	// MMX_PMULHUWrm
    201395714U,	// MMX_PMULHUWrr
    404885003U,	// MMX_PMULHWrm
    201395723U,	// MMX_PMULHWrr
    404885011U,	// MMX_PMULLWrm
    201395731U,	// MMX_PMULLWrr
    404885019U,	// MMX_PMULUDQrm
    201395739U,	// MMX_PMULUDQrr
    404885028U,	// MMX_PORrm
    201395748U,	// MMX_PORrr
    404885033U,	// MMX_PSADBWrm
    201395753U,	// MMX_PSADBWrr
    2116816433U,	// MMX_PSHUFWmi
    202018353U,	// MMX_PSHUFWri
    201395769U,	// MMX_PSLLDri
    404885049U,	// MMX_PSLLDrm
    201395769U,	// MMX_PSLLDrr
    201395776U,	// MMX_PSLLQri
    404885056U,	// MMX_PSLLQrm
    201395776U,	// MMX_PSLLQrr
    201395783U,	// MMX_PSLLWri
    404885063U,	// MMX_PSLLWrm
    201395783U,	// MMX_PSLLWrr
    201395790U,	// MMX_PSRADri
    404885070U,	// MMX_PSRADrm
    201395790U,	// MMX_PSRADrr
    201395797U,	// MMX_PSRAWri
    404885077U,	// MMX_PSRAWrm
    201395797U,	// MMX_PSRAWrr
    201395804U,	// MMX_PSRLDri
    404885084U,	// MMX_PSRLDrm
    201395804U,	// MMX_PSRLDrr
    201395811U,	// MMX_PSRLQri
    404885091U,	// MMX_PSRLQrm
    201395811U,	// MMX_PSRLQrr
    201395818U,	// MMX_PSRLWri
    404885098U,	// MMX_PSRLWrm
    201395818U,	// MMX_PSRLWrr
    404885105U,	// MMX_PSUBBrm
    201395825U,	// MMX_PSUBBrr
    404885112U,	// MMX_PSUBDrm
    201395832U,	// MMX_PSUBDrr
    404885119U,	// MMX_PSUBQrm
    201395839U,	// MMX_PSUBQrr
    404885126U,	// MMX_PSUBSBrm
    201395846U,	// MMX_PSUBSBrr
    404885134U,	// MMX_PSUBSWrm
    201395854U,	// MMX_PSUBSWrr
    404885142U,	// MMX_PSUBUSBrm
    201395862U,	// MMX_PSUBUSBrr
    404885151U,	// MMX_PSUBUSWrm
    201395871U,	// MMX_PSUBUSWrr
    404885160U,	// MMX_PSUBWrm
    201395880U,	// MMX_PSUBWrr
    404885167U,	// MMX_PUNPCKHBWrm
    201395887U,	// MMX_PUNPCKHBWrr
    404885178U,	// MMX_PUNPCKHDQrm
    201395898U,	// MMX_PUNPCKHDQrr
    404885189U,	// MMX_PUNPCKHWDrm
    201395909U,	// MMX_PUNPCKHWDrr
    404885200U,	// MMX_PUNPCKLBWrm
    201395920U,	// MMX_PUNPCKLBWrr
    404885211U,	// MMX_PUNPCKLDQrm
    201395931U,	// MMX_PUNPCKLDQrr
    404885222U,	// MMX_PUNPCKLWDrm
    201395942U,	// MMX_PUNPCKLWDrr
    404883559U,	// MMX_PXORrm
    201394279U,	// MMX_PXORrr
    536938599U,	// MMX_V_SET0
    536939922U,	// MMX_V_SETALLONES
    67112689U,	// MONITOR
    134221561U,	// MOV16mi
    134221561U,	// MOV16mr
    2550140671U,	// MOV16r0
    1344409337U,	// MOV16ri
    1277300473U,	// MOV16rm
    1344409337U,	// MOV16rr
    134418181U,	// MOV32mi
    134418181U,	// MOV32mr
    536940287U,	// MOV32r0
    1344409349U,	// MOV32ri
    1411518213U,	// MOV32rm
    1344409349U,	// MOV32rr
    1476398859U,	// MOV64FSrm
    1476398869U,	// MOV64GSrm
    134483212U,	// MOV64mi32
    134483212U,	// MOV64mr
    1344409375U,	// MOV64ri
    1344408844U,	// MOV64ri32
    1388318469U,	// MOV64ri64i32
    1476398348U,	// MOV64rm
    1344408844U,	// MOV64rr
    1344408812U,	// MOV64toPQIrr
    1476398348U,	// MOV64toSDrm
    1344408812U,	// MOV64toSDrr
    134549288U,	// MOV8mi
    134549288U,	// MOV8mr
    134598440U,	// MOV8mr_NOREX
    536940334U,	// MOV8r0
    1344409384U,	// MOV8ri
    1747062568U,	// MOV8rm
    1747783464U,	// MOV8rm_NOREX
    1344409384U,	// MOV8rr
    1345130280U,	// MOV8rr_NOREX
    135137389U,	// MOVAPDmr
    2147485805U,	// MOVAPDrm
    1344407661U,	// MOVAPDrr
    135137397U,	// MOVAPSmr
    2147485813U,	// MOVAPSrm
    1344407669U,	// MOVAPSrr
    1946160948U,	// MOVDDUPrm
    1344409396U,	// MOVDDUPrr
    1411517676U,	// MOVDI2PDIrm
    1344408812U,	// MOVDI2PDIrr
    1411517676U,	// MOVDI2SSrm
    1344408812U,	// MOVDI2SSrr
    135204669U,	// MOVDQAmr
    2214596413U,	// MOVDQArm
    1344409405U,	// MOVDQArr
    135204677U,	// MOVDQUmr
    135204677U,	// MOVDQUmr_Int
    2214596421U,	// MOVDQUrm
    2214596421U,	// MOVDQUrm_Int
    201396045U,	// MOVHLPSrr
    135270230U,	// MOVHPDmr
    671092566U,	// MOVHPDrm
    135270238U,	// MOVHPSmr
    671092574U,	// MOVHPSrm
    201396070U,	// MOVLHPSrr
    135270255U,	// MOVLPDmr
    671092591U,	// MOVLPDrm
    201396087U,	// MOVLPDrr
    135270270U,	// MOVLPSmr
    671092606U,	// MOVLPSrm
    201396102U,	// MOVLPSrr
    134483212U,	// MOVLQ128mr
    201396087U,	// MOVLSD2PDrr
    201396102U,	// MOVLSS2PSrr
    1344409485U,	// MOVMSKPDrr
    1344409495U,	// MOVMSKPSrr
    2214596513U,	// MOVNTDQArm
    135139243U,	// MOVNTDQmr
    134418356U,	// MOVNTImr
    135204796U,	// MOVNTPDmr
    135204805U,	// MOVNTPSmr
    2617246765U,	// MOVPC32r
    135270263U,	// MOVPD2SDmr
    1344409463U,	// MOVPD2SDrr
    134417644U,	// MOVPDI2DImr
    1344408812U,	// MOVPDI2DIrr
    134483212U,	// MOVPQI2QImr
    1344408812U,	// MOVPQIto64rr
    134942598U,	// MOVPS2SSmr
    1344409478U,	// MOVPS2SSrr
    1476398348U,	// MOVQI2PQIrm
    1946161015U,	// MOVSD2PDrm
    1344409463U,	// MOVSD2PDrr
    135270263U,	// MOVSDmr
    1946161015U,	// MOVSDrm
    1344409463U,	// MOVSDrr
    134483212U,	// MOVSDto64mr
    1344408812U,	// MOVSDto64rr
    2147487694U,	// MOVSHDUPrm
    1344409550U,	// MOVSHDUPrr
    2147487704U,	// MOVSLDUPrm
    1344409560U,	// MOVSLDUPrr
    134417644U,	// MOVSS2DImr
    1344408812U,	// MOVSS2DIrr
    2013269894U,	// MOVSS2PSrm
    1344409478U,	// MOVSS2PSrr
    134942598U,	// MOVSSmr
    2013269894U,	// MOVSSrm
    1344409478U,	// MOVSSrr
    1790971874U,	// MOVSX16rm8
    1388318690U,	// MOVSX16rr8
    1277300714U,	// MOVSX32rm16
    1747062754U,	// MOVSX32rm8
    1344409578U,	// MOVSX32rr16
    1344409570U,	// MOVSX32rr8
    1277300722U,	// MOVSX64rm16
    1411518458U,	// MOVSX64rm32
    1747062786U,	// MOVSX64rm8
    1344409586U,	// MOVSX64rr16
    1344409594U,	// MOVSX64rr32
    1344409602U,	// MOVSX64rr8
    135139338U,	// MOVUPDmr
    135139338U,	// MOVUPDmr_Int
    2147487754U,	// MOVUPDrm
    2147487754U,	// MOVUPDrm_Int
    1344409610U,	// MOVUPDrr
    135139346U,	// MOVUPSmr
    135139346U,	// MOVUPSmr_Int
    2147487762U,	// MOVUPSrm
    2147487762U,	// MOVUPSrm_Int
    1344409618U,	// MOVUPSrr
    1411517676U,	// MOVZDI2PDIrm
    1344408812U,	// MOVZDI2PDIrr
    2214595852U,	// MOVZPQILo2PQIrm
    1344408844U,	// MOVZPQILo2PQIrr
    1476398348U,	// MOVZQI2PQIrm
    1344408812U,	// MOVZQI2PQIrr
    1946161015U,	// MOVZSD2PDrm
    2013269894U,	// MOVZSS2PSrm
    1790971930U,	// MOVZX16rm8
    1388318746U,	// MOVZX16rr8
    1747783706U,	// MOVZX32_NOREXrm8
    1345130522U,	// MOVZX32_NOREXrr8
    1277300770U,	// MOVZX32rm16
    1747062810U,	// MOVZX32rm8
    1344409634U,	// MOVZX32rr16
    1344409626U,	// MOVZX32rr8
    1321209890U,	// MOVZX64rm16
    1455427333U,	// MOVZX64rm32
    1790971930U,	// MOVZX64rm8
    1388318754U,	// MOVZX64rr16
    1388318469U,	// MOVZX64rr32
    1388318746U,	// MOVZX64rr8
    0U,	// MOV_Fp3232
    0U,	// MOV_Fp3264
    0U,	// MOV_Fp3280
    0U,	// MOV_Fp6432
    0U,	// MOV_Fp6464
    0U,	// MOV_Fp6480
    0U,	// MOV_Fp8032
    0U,	// MOV_Fp8064
    0U,	// MOV_Fp8080
    1086328874U,	// MPSADBWrmi
    1140854826U,	// MPSADBWrri
    939528243U,	// MUL16m
    547360819U,	// MUL16r
    1017122873U,	// MUL32m
    547360825U,	// MUL32r
    1543508031U,	// MUL64m
    547360831U,	// MUL64r
    1677725765U,	// MUL8m
    547360837U,	// MUL8r
    603983947U,	// MULPDrm
    201396299U,	// MULPDrr
    603983954U,	// MULPSrm
    201396306U,	// MULPSrr
    671092825U,	// MULSDrm
    671092825U,	// MULSDrm_Int
    201396313U,	// MULSDrr
    201396313U,	// MULSDrr_Int
    738201696U,	// MULSSrm
    738201696U,	// MULSSrm_Int
    201396320U,	// MULSSrr
    201396320U,	// MULSSrr_Int
    805310567U,	// MUL_F32m
    872419438U,	// MUL_F64m
    939528309U,	// MUL_FI16m
    1017122941U,	// MUL_FI32m
    547360901U,	// MUL_FPrST0
    547360908U,	// MUL_FST0r
    0U,	// MUL_Fp32
    0U,	// MUL_Fp32m
    0U,	// MUL_Fp64
    0U,	// MUL_Fp64m
    0U,	// MUL_Fp64m32
    0U,	// MUL_Fp80
    0U,	// MUL_Fp80m32
    0U,	// MUL_Fp80m64
    0U,	// MUL_FpI16m32
    0U,	// MUL_FpI16m64
    0U,	// MUL_FpI16m80
    0U,	// MUL_FpI32m32
    0U,	// MUL_FpI32m64
    0U,	// MUL_FpI32m80
    547360914U,	// MUL_FrST0
    67113120U,	// MWAIT
    939528358U,	// NEG16m
    547360934U,	// NEG16r
    1017122988U,	// NEG32m
    547360940U,	// NEG32r
    1543508146U,	// NEG64m
    547360946U,	// NEG64r
    1677725880U,	// NEG8m
    547360952U,	// NEG8r
    67113150U,	// NOOP
    1017123010U,	// NOOPL
    939528392U,	// NOT16m
    547360968U,	// NOT16r
    1017123022U,	// NOT32m
    547360974U,	// NOT32r
    1543508180U,	// NOT64m
    547360980U,	// NOT64r
    1677725914U,	// NOT8m
    547360986U,	// NOT8r
    134222048U,	// OR16mi
    134222048U,	// OR16mi8
    134222048U,	// OR16mr
    201396448U,	// OR16ri
    201396448U,	// OR16ri8
    270668000U,	// OR16rm
    201396448U,	// OR16rr
    134418661U,	// OR32mi
    134418661U,	// OR32mi8
    134418661U,	// OR32mr
    201396453U,	// OR32ri
    201396453U,	// OR32ri8
    337776869U,	// OR32rm
    201396453U,	// OR32rr
    134484202U,	// OR64mi32
    134484202U,	// OR64mi8
    134484202U,	// OR64mr
    201396458U,	// OR64ri32
    201396458U,	// OR64ri8
    404885738U,	// OR64rm
    201396458U,	// OR64rr
    134549743U,	// OR8mi
    134549743U,	// OR8mr
    201396463U,	// OR8ri
    471994607U,	// OR8rm
    201396463U,	// OR8rr
    603981949U,	// ORPDrm
    201394301U,	// ORPDrr
    603981955U,	// ORPSrm
    201394307U,	// ORPSrr
    547361012U,	// OUT16ir
    67113215U,	// OUT16rr
    547361037U,	// OUT32ir
    67113241U,	// OUT32rr
    547361064U,	// OUT8ir
    67113267U,	// OUT8rr
    2214596929U,	// PABSBrm128
    1476399425U,	// PABSBrm64
    1344409921U,	// PABSBrr128
    1344409921U,	// PABSBrr64
    2214596936U,	// PABSDrm128
    1476399432U,	// PABSDrm64
    1344409928U,	// PABSDrr128
    1344409928U,	// PABSDrr64
    2214596943U,	// PABSWrm128
    1476399439U,	// PABSWrm64
    1344409935U,	// PABSWrr128
    1344409935U,	// PABSWrr64
    1207962898U,	// PACKSSDWrm
    201395474U,	// PACKSSDWrr
    1207962908U,	// PACKSSWBrm
    201395484U,	// PACKSSWBrr
    1207963990U,	// PACKUSDWrm
    201396566U,	// PACKUSDWrr
    1207962918U,	// PACKUSWBrm
    201395494U,	// PACKUSWBrr
    1207962928U,	// PADDBrm
    201395504U,	// PADDBrr
    1207962935U,	// PADDDrm
    201395511U,	// PADDDrr
    1207962942U,	// PADDQrm
    201395518U,	// PADDQrr
    1207962949U,	// PADDSBrm
    201395525U,	// PADDSBrr
    1207962957U,	// PADDSWrm
    201395533U,	// PADDSWrr
    1207962965U,	// PADDUSBrm
    201395541U,	// PADDUSBrr
    1207962974U,	// PADDUSWrm
    201395550U,	// PADDUSWrr
    1207962983U,	// PADDWrm
    201395559U,	// PADDWrr
    1086329184U,	// PALIGNR128rm
    1140855136U,	// PALIGNR128rr
    1121980768U,	// PALIGNR64rm
    1140855136U,	// PALIGNR64rr
    1207962990U,	// PANDNrm
    201395566U,	// PANDNrr
    1207962997U,	// PANDrm
    201395573U,	// PANDrr
    1207963003U,	// PAVGBrm
    201395579U,	// PAVGBrr
    1207963010U,	// PAVGWrm
    201395586U,	// PAVGWrr
    1207964009U,	// PBLENDVBrm0
    201396585U,	// PBLENDVBrr0
    1086329210U,	// PBLENDWrmi
    1140855162U,	// PBLENDWrri
    1207963017U,	// PCMPEQBrm
    201395593U,	// PCMPEQBrr
    1207963026U,	// PCMPEQDrm
    201395602U,	// PCMPEQDrr
    1207964035U,	// PCMPEQQrm
    201396611U,	// PCMPEQQrr
    1207963035U,	// PCMPEQWrm
    201395611U,	// PCMPEQWrr
    2130710924U,	// PCMPESTRIArm
    202019212U,	// PCMPESTRIArr
    2130710924U,	// PCMPESTRICrm
    202019212U,	// PCMPESTRICrr
    2130710924U,	// PCMPESTRIOrm
    202019212U,	// PCMPESTRIOrr
    2130710924U,	// PCMPESTRISrm
    202019212U,	// PCMPESTRISrr
    2130710924U,	// PCMPESTRIZrm
    202019212U,	// PCMPESTRIZrr
    2130710924U,	// PCMPESTRIrm
    202019212U,	// PCMPESTRIrr
    67113367U,	// PCMPESTRM128MEM
    67113391U,	// PCMPESTRM128REG
    2130710983U,	// PCMPESTRM128rm
    202019271U,	// PCMPESTRM128rr
    1207963044U,	// PCMPGTBrm
    201395620U,	// PCMPGTBrr
    1207963053U,	// PCMPGTDrm
    201395629U,	// PCMPGTDrr
    1207964114U,	// PCMPGTQrm
    201396690U,	// PCMPGTQrr
    1207963062U,	// PCMPGTWrm
    201395638U,	// PCMPGTWrr
    2130711003U,	// PCMPISTRIArm
    202019291U,	// PCMPISTRIArr
    2130711003U,	// PCMPISTRICrm
    202019291U,	// PCMPISTRICrr
    2130711003U,	// PCMPISTRIOrm
    202019291U,	// PCMPISTRIOrr
    2130711003U,	// PCMPISTRISrm
    202019291U,	// PCMPISTRISrr
    2130711003U,	// PCMPISTRIZrm
    202019291U,	// PCMPISTRIZrr
    2130711003U,	// PCMPISTRIrm
    202019291U,	// PCMPISTRIrr
    67113446U,	// PCMPISTRM128MEM
    67113470U,	// PCMPISTRM128REG
    2130711062U,	// PCMPISTRM128rm
    202019350U,	// PCMPISTRM128rr
    2110067233U,	// PEXTRBmr
    202019361U,	// PEXTRBrr
    2109936169U,	// PEXTRDmr
    202019369U,	// PEXTRDrr
    2110001713U,	// PEXTRQmr
    202019377U,	// PEXTRQrr
    2109738431U,	// PEXTRWmr
    202018239U,	// PEXTRWri
    1207964217U,	// PHADDDrm128
    404886073U,	// PHADDDrm64
    201396793U,	// PHADDDrr128
    201396793U,	// PHADDDrr64
    1207964225U,	// PHADDSWrm128
    404886081U,	// PHADDSWrm64
    201396801U,	// PHADDSWrr128
    201396801U,	// PHADDSWrr64
    1207964234U,	// PHADDWrm128
    404886090U,	// PHADDWrm64
    201396810U,	// PHADDWrr128
    201396810U,	// PHADDWrr64
    2214597202U,	// PHMINPOSUWrm128
    1344410194U,	// PHMINPOSUWrr128
    1207964254U,	// PHSUBDrm128
    404886110U,	// PHSUBDrm64
    201396830U,	// PHSUBDrr128
    201396830U,	// PHSUBDrr64
    1207964262U,	// PHSUBSWrm128
    404886118U,	// PHSUBSWrm64
    201396838U,	// PHSUBSWrr128
    201396838U,	// PHSUBSWrr64
    1207964271U,	// PHSUBWrm128
    404886127U,	// PHSUBWrm64
    201396847U,	// PHSUBWrr128
    201396847U,	// PHSUBWrr64
    1126175351U,	// PINSRBrm
    1140855415U,	// PINSRBrr
    1128272511U,	// PINSRDrm
    1140855423U,	// PINSRDrr
    1121981063U,	// PINSRQrm
    1140855431U,	// PINSRQrr
    1117785543U,	// PINSRWrmi
    1140854215U,	// PINSRWrri
    1207964303U,	// PMADDUBSWrm128
    404886159U,	// PMADDUBSWrm64
    201396879U,	// PMADDUBSWrr128
    201396879U,	// PMADDUBSWrr64
    1207963087U,	// PMADDWDrm
    201395663U,	// PMADDWDrr
    1207964314U,	// PMAXSBrm
    201396890U,	// PMAXSBrr
    1207964322U,	// PMAXSDrm
    201396898U,	// PMAXSDrr
    1207963096U,	// PMAXSWrm
    201395672U,	// PMAXSWrr
    1207963104U,	// PMAXUBrm
    201395680U,	// PMAXUBrr
    1207964330U,	// PMAXUDrm
    201396906U,	// PMAXUDrr
    1207964338U,	// PMAXUWrm
    201396914U,	// PMAXUWrr
    1207964346U,	// PMINSBrm
    201396922U,	// PMINSBrr
    1207964354U,	// PMINSDrm
    201396930U,	// PMINSDrr
    1207963112U,	// PMINSWrm
    201395688U,	// PMINSWrr
    1207963120U,	// PMINUBrm
    201395696U,	// PMINUBrr
    1207964362U,	// PMINUDrm
    201396938U,	// PMINUDrr
    1207964370U,	// PMINUWrm
    201396946U,	// PMINUWrr
    1344409080U,	// PMOVMSKBrr
    1411519194U,	// PMOVSXBDrm
    1344410330U,	// PMOVSXBDrr
    1277301476U,	// PMOVSXBQrm
    1344410340U,	// PMOVSXBQrr
    1476399854U,	// PMOVSXBWrm
    1344410350U,	// PMOVSXBWrr
    1476399864U,	// PMOVSXDQrm
    1344410360U,	// PMOVSXDQrr
    1476399874U,	// PMOVSXWDrm
    1344410370U,	// PMOVSXWDrr
    1411519244U,	// PMOVSXWQrm
    1344410380U,	// PMOVSXWQrr
    1411519254U,	// PMOVZXBDrm
    1344410390U,	// PMOVZXBDrr
    1277301536U,	// PMOVZXBQrm
    1344410400U,	// PMOVZXBQrr
    1476399914U,	// PMOVZXBWrm
    1344410410U,	// PMOVZXBWrr
    1476399924U,	// PMOVZXDQrm
    1344410420U,	// PMOVZXDQrr
    1476399934U,	// PMOVZXWDrm
    1344410430U,	// PMOVZXWDrr
    1411519304U,	// PMOVZXWQrm
    1344410440U,	// PMOVZXWQrr
    1207964498U,	// PMULDQrm
    201397074U,	// PMULDQrr
    1207964506U,	// PMULHRSWrm128
    404886362U,	// PMULHRSWrm64
    201397082U,	// PMULHRSWrr128
    201397082U,	// PMULHRSWrr64
    1207963138U,	// PMULHUWrm
    201395714U,	// PMULHUWrr
    1207963147U,	// PMULHWrm
    201395723U,	// PMULHWrr
    1207964516U,	// PMULLDrm
    1207964516U,	// PMULLDrm_int
    201397092U,	// PMULLDrr
    201397092U,	// PMULLDrr_int
    1207963155U,	// PMULLWrm
    201395731U,	// PMULLWrr
    1207963163U,	// PMULUDQrm
    201395739U,	// PMULUDQrr
    547361644U,	// POP32r
    547361650U,	// POP64r
    67113848U,	// POPFD
    67113848U,	// POPFQ
    1207963172U,	// PORrm
    201395748U,	// PORrr
    1677726589U,	// PREFETCHNTA
    1677726602U,	// PREFETCHT0
    1677726614U,	// PREFETCHT1
    1677726626U,	// PREFETCHT2
    1207963177U,	// PSADBWrm
    201395753U,	// PSADBWrr
    1207964590U,	// PSHUFBrm128
    404886446U,	// PSHUFBrm64
    201397166U,	// PSHUFBrr128
    201397166U,	// PSHUFBrr64
    2130711478U,	// PSHUFDmi
    202019766U,	// PSHUFDri
    2130711486U,	// PSHUFHWmi
    202019774U,	// PSHUFHWri
    2130711495U,	// PSHUFLWmi
    202019783U,	// PSHUFLWri
    1207964624U,	// PSIGNBrm128
    404886480U,	// PSIGNBrm64
    201397200U,	// PSIGNBrr128
    201397200U,	// PSIGNBrr64
    1207964632U,	// PSIGNDrm128
    404886488U,	// PSIGNDrm64
    201397208U,	// PSIGNDrr128
    201397208U,	// PSIGNDrr64
    1207964640U,	// PSIGNWrm128
    404886496U,	// PSIGNWrm64
    201397216U,	// PSIGNWrr128
    201397216U,	// PSIGNWrr64
    201397224U,	// PSLLDQri
    201395769U,	// PSLLDri
    1207963193U,	// PSLLDrm
    201395769U,	// PSLLDrr
    201395776U,	// PSLLQri
    1207963200U,	// PSLLQrm
    201395776U,	// PSLLQrr
    201395783U,	// PSLLWri
    1207963207U,	// PSLLWrm
    201395783U,	// PSLLWrr
    201395790U,	// PSRADri
    1207963214U,	// PSRADrm
    201395790U,	// PSRADrr
    201395797U,	// PSRAWri
    1207963221U,	// PSRAWrm
    201395797U,	// PSRAWrr
    201397232U,	// PSRLDQri
    201395804U,	// PSRLDri
    1207963228U,	// PSRLDrm
    201395804U,	// PSRLDrr
    201395811U,	// PSRLQri
    1207963235U,	// PSRLQrm
    201395811U,	// PSRLQrr
    201395818U,	// PSRLWri
    1207963242U,	// PSRLWrm
    201395818U,	// PSRLWrr
    1207963249U,	// PSUBBrm
    201395825U,	// PSUBBrr
    1207963256U,	// PSUBDrm
    201395832U,	// PSUBDrr
    1207963263U,	// PSUBQrm
    201395839U,	// PSUBQrr
    1207963270U,	// PSUBSBrm
    201395846U,	// PSUBSBrr
    1207963278U,	// PSUBSWrm
    201395854U,	// PSUBSWrr
    1207963286U,	// PSUBUSBrm
    201395862U,	// PSUBUSBrr
    1207963295U,	// PSUBUSWrm
    201395871U,	// PSUBUSWrr
    1207963304U,	// PSUBWrm
    201395880U,	// PSUBWrr
    2214597624U,	// PTESTrm
    1344410616U,	// PTESTrr
    1207963311U,	// PUNPCKHBWrm
    201395887U,	// PUNPCKHBWrr
    1207963322U,	// PUNPCKHDQrm
    201395898U,	// PUNPCKHDQrr
    1207964672U,	// PUNPCKHQDQrm
    201397248U,	// PUNPCKHQDQrr
    1207963333U,	// PUNPCKHWDrm
    201395909U,	// PUNPCKHWDrr
    1207963344U,	// PUNPCKLBWrm
    201395920U,	// PUNPCKLBWrr
    1207963355U,	// PUNPCKLDQrm
    201395931U,	// PUNPCKLDQrr
    1207964684U,	// PUNPCKLQDQrm
    201397260U,	// PUNPCKLQDQrr
    1207963366U,	// PUNPCKLWDrm
    201395942U,	// PUNPCKLWDrr
    547361816U,	// PUSH32i16
    547361816U,	// PUSH32i32
    547361816U,	// PUSH32i8
    547361816U,	// PUSH32r
    547361823U,	// PUSH64i16
    547361823U,	// PUSH64i32
    547361823U,	// PUSH64i8
    547361823U,	// PUSH64r
    67114022U,	// PUSHFD
    67114022U,	// PUSHFQ
    1207961703U,	// PXORrm
    201394279U,	// PXORrr
    2147488812U,	// RCPPSm
    2147488812U,	// RCPPSm_Int
    1344410668U,	// RCPPSr
    1344410668U,	// RCPPSr_Int
    2013271091U,	// RCPSSm
    2013271091U,	// RCPSSm_Int
    1344410675U,	// RCPSSr
    1344410675U,	// RCPSSr_Int
    67114042U,	// RDTSC
    67114048U,	// REP_MOVSB
    67114058U,	// REP_MOVSD
    67114068U,	// REP_MOVSQ
    67114078U,	// REP_MOVSW
    67114088U,	// REP_STOSB
    67114098U,	// REP_STOSD
    67114108U,	// REP_STOSQ
    67114118U,	// REP_STOSW
    67114128U,	// RET
    547361940U,	// RETI
    939529369U,	// ROL16m1
    939529375U,	// ROL16mCL
    134223001U,	// ROL16mi
    547361945U,	// ROL16r1
    547361951U,	// ROL16rCL
    201397401U,	// ROL16ri
    1017124010U,	// ROL32m1
    1017124016U,	// ROL32mCL
    134419626U,	// ROL32mi
    547361962U,	// ROL32r1
    547361968U,	// ROL32rCL
    201397418U,	// ROL32ri
    1543509179U,	// ROL64m1
    1543509185U,	// ROL64mCL
    134485179U,	// ROL64mi
    547361979U,	// ROL64r1
    547361985U,	// ROL64rCL
    201397435U,	// ROL64ri
    1677726924U,	// ROL8m1
    1677726930U,	// ROL8mCL
    134550732U,	// ROL8mi
    547361996U,	// ROL8r1
    547362002U,	// ROL8rCL
    201397452U,	// ROL8ri
    939529437U,	// ROR16m1
    939529443U,	// ROR16mCL
    134223069U,	// ROR16mi
    547362013U,	// ROR16r1
    547362019U,	// ROR16rCL
    201397469U,	// ROR16ri
    1017124078U,	// ROR32m1
    1017124084U,	// ROR32mCL
    134419694U,	// ROR32mi
    547362030U,	// ROR32r1
    547362036U,	// ROR32rCL
    201397486U,	// ROR32ri
    1543509247U,	// ROR64m1
    1543509253U,	// ROR64mCL
    134485247U,	// ROR64mi
    547362047U,	// ROR64r1
    547362053U,	// ROR64rCL
    201397503U,	// ROR64ri
    1677726992U,	// ROR8m1
    1677726998U,	// ROR8mCL
    134550800U,	// ROR8mi
    547362064U,	// ROR8r1
    547362070U,	// ROR8rCL
    201397520U,	// ROR8ri
    2137003297U,	// ROUNDPDm_Int
    202020129U,	// ROUNDPDr_Int
    2137003306U,	// ROUNDPSm_Int
    202020138U,	// ROUNDPSr_Int
    1132467507U,	// ROUNDSDm_Int
    1140856115U,	// ROUNDSDr_Int
    1111495996U,	// ROUNDSSm_Int
    1140856124U,	// ROUNDSSr_Int
    2147489093U,	// RSQRTPSm
    2147489093U,	// RSQRTPSm_Int
    1344410949U,	// RSQRTPSr
    1344410949U,	// RSQRTPSr_Int
    2013271374U,	// RSQRTSSm
    2013271374U,	// RSQRTSSm_Int
    1344410958U,	// RSQRTSSr
    1344410958U,	// RSQRTSSr_Int
    67114327U,	// SAHF
    939529564U,	// SAR16m1
    939529570U,	// SAR16mCL
    134223196U,	// SAR16mi
    547362140U,	// SAR16r1
    547362146U,	// SAR16rCL
    201397596U,	// SAR16ri
    1017124205U,	// SAR32m1
    1017124211U,	// SAR32mCL
    134419821U,	// SAR32mi
    547362157U,	// SAR32r1
    547362163U,	// SAR32rCL
    201397613U,	// SAR32ri
    1543509374U,	// SAR64m1
    1543509380U,	// SAR64mCL
    134485374U,	// SAR64mi
    547362174U,	// SAR64r1
    547362180U,	// SAR64rCL
    201397630U,	// SAR64ri
    1677727119U,	// SAR8m1
    1677727125U,	// SAR8mCL
    134550927U,	// SAR8mi
    547362191U,	// SAR8r1
    547362197U,	// SAR8rCL
    201397647U,	// SAR8ri
    134223264U,	// SBB16mi
    134223264U,	// SBB16mi8
    134223264U,	// SBB16mr
    201397664U,	// SBB16ri
    201397664U,	// SBB16ri8
    270669216U,	// SBB16rm
    201397664U,	// SBB16rr
    134419878U,	// SBB32mi
    134419878U,	// SBB32mi8
    134419878U,	// SBB32mr
    201397670U,	// SBB32ri
    201397670U,	// SBB32ri8
    337778086U,	// SBB32rm
    201397670U,	// SBB32rr
    134485420U,	// SBB64mi32
    134485420U,	// SBB64mi8
    134485420U,	// SBB64mr
    201397676U,	// SBB64ri32
    201397676U,	// SBB64ri8
    404886956U,	// SBB64rm
    201397676U,	// SBB64rr
    134550962U,	// SBB8mi
    134550962U,	// SBB8mr
    201397682U,	// SBB8ri
    471995826U,	// SBB8rm
    201397682U,	// SBB8rr
    1677727160U,	// SETAEm
    547362232U,	// SETAEr
    1677727167U,	// SETAm
    547362239U,	// SETAr
    1677727173U,	// SETBEm
    547362245U,	// SETBEr
    1677727180U,	// SETBm
    547362252U,	// SETBr
    1677727186U,	// SETEm
    547362258U,	// SETEr
    1677727192U,	// SETGEm
    547362264U,	// SETGEr
    1677727199U,	// SETGm
    547362271U,	// SETGr
    1677727205U,	// SETLEm
    547362277U,	// SETLEr
    1677727212U,	// SETLm
    547362284U,	// SETLr
    1677727218U,	// SETNEm
    547362290U,	// SETNEr
    1677727225U,	// SETNOm
    547362297U,	// SETNOr
    1677727232U,	// SETNPm
    547362304U,	// SETNPr
    1677727239U,	// SETNSm
    547362311U,	// SETNSr
    1677727246U,	// SETOm
    547362318U,	// SETOr
    1677727252U,	// SETPm
    547362324U,	// SETPr
    1677727258U,	// SETSm
    547362330U,	// SETSr
    67114528U,	// SFENCE
    939529767U,	// SHL16m1
    939529773U,	// SHL16mCL
    134223399U,	// SHL16mi
    547362349U,	// SHL16rCL
    201397799U,	// SHL16ri
    1017124408U,	// SHL32m1
    1017124414U,	// SHL32mCL
    134420024U,	// SHL32mi
    547362366U,	// SHL32rCL
    201397816U,	// SHL32ri
    1543509577U,	// SHL64m1
    1543509583U,	// SHL64mCL
    134485577U,	// SHL64mi
    547362383U,	// SHL64rCL
    201397833U,	// SHL64ri
    1677727322U,	// SHL8m1
    1677727328U,	// SHL8mCL
    134551130U,	// SHL8mi
    547362400U,	// SHL8rCL
    201397850U,	// SHL8ri
    134223467U,	// SHLD16mrCL
    2109740663U,	// SHLD16mri8
    201397867U,	// SHLD16rrCL
    1140856439U,	// SHLD16rri8
    134420094U,	// SHLD32mrCL
    2109937290U,	// SHLD32mri8
    201397886U,	// SHLD32rrCL
    1140856458U,	// SHLD32rri8
    134485649U,	// SHLD64mrCL
    2110002845U,	// SHLD64mri8
    201397905U,	// SHLD64rrCL
    1140856477U,	// SHLD64rri8
    939529892U,	// SHR16m1
    939529898U,	// SHR16mCL
    134223524U,	// SHR16mi
    547362468U,	// SHR16r1
    547362474U,	// SHR16rCL
    201397924U,	// SHR16ri
    1017124533U,	// SHR32m1
    1017124539U,	// SHR32mCL
    134420149U,	// SHR32mi
    547362485U,	// SHR32r1
    547362491U,	// SHR32rCL
    201397941U,	// SHR32ri
    1543509702U,	// SHR64m1
    1543509708U,	// SHR64mCL
    134485702U,	// SHR64mi
    547362502U,	// SHR64r1
    547362508U,	// SHR64rCL
    201397958U,	// SHR64ri
    1677727447U,	// SHR8m1
    1677727453U,	// SHR8mCL
    134551255U,	// SHR8mi
    547362519U,	// SHR8r1
    547362525U,	// SHR8rCL
    201397975U,	// SHR8ri
    134223592U,	// SHRD16mrCL
    2109740788U,	// SHRD16mri8
    201397992U,	// SHRD16rrCL
    1140856564U,	// SHRD16rri8
    134420219U,	// SHRD32mrCL
    2109937415U,	// SHRD32mri8
    201398011U,	// SHRD32rrCL
    1140856583U,	// SHRD32rri8
    134485774U,	// SHRD64mrCL
    2110002970U,	// SHRD64mri8
    201398030U,	// SHRD64rrCL
    1140856602U,	// SHRD64rri8
    1134565153U,	// SHUFPDrmi
    1140856609U,	// SHUFPDrri
    1134565161U,	// SHUFPSrmi
    1140856617U,	// SHUFPSrri
    67114801U,	// SIN_F
    0U,	// SIN_Fp32
    0U,	// SIN_Fp64
    0U,	// SIN_Fp80
    2147489590U,	// SQRTPDm
    2147489590U,	// SQRTPDm_Int
    1344411446U,	// SQRTPDr
    1344411446U,	// SQRTPDr_Int
    2147489598U,	// SQRTPSm
    2147489598U,	// SQRTPSm_Int
    1344411454U,	// SQRTPSr
    1344411454U,	// SQRTPSr_Int
    1946163014U,	// SQRTSDm
    1946163014U,	// SQRTSDm_Int
    1344411462U,	// SQRTSDr
    1344411462U,	// SQRTSDr_Int
    2013271886U,	// SQRTSSm
    2013271886U,	// SQRTSSm_Int
    1344411470U,	// SQRTSSr
    1344411470U,	// SQRTSSr_Int
    67114838U,	// SQRT_F
    0U,	// SQRT_Fp32
    0U,	// SQRT_Fp64
    0U,	// SQRT_Fp80
    1017124700U,	// STMXCSR
    805312357U,	// ST_F32m
    872421227U,	// ST_F64m
    805312369U,	// ST_FP32m
    872421240U,	// ST_FP64m
    2281707391U,	// ST_FP80m
    547362694U,	// ST_FPrr
    0U,	// ST_Fp32m
    0U,	// ST_Fp64m
    0U,	// ST_Fp64m32
    0U,	// ST_Fp80m32
    0U,	// ST_Fp80m64
    0U,	// ST_FpP32m
    0U,	// ST_FpP64m
    0U,	// ST_FpP64m32
    0U,	// ST_FpP80m
    0U,	// ST_FpP80m32
    0U,	// ST_FpP80m64
    547362700U,	// ST_Frr
    134223761U,	// SUB16mi
    134223761U,	// SUB16mi8
    134223761U,	// SUB16mr
    201398161U,	// SUB16ri
    201398161U,	// SUB16ri8
    270669713U,	// SUB16rm
    201398161U,	// SUB16rr
    134420375U,	// SUB32mi
    134420375U,	// SUB32mi8
    134420375U,	// SUB32mr
    201398167U,	// SUB32ri
    201398167U,	// SUB32ri8
    337778583U,	// SUB32rm
    201398167U,	// SUB32rr
    134485917U,	// SUB64mi32
    134485917U,	// SUB64mi8
    134485917U,	// SUB64mr
    201398173U,	// SUB64ri32
    201398173U,	// SUB64ri8
    404887453U,	// SUB64rm
    201398173U,	// SUB64rr
    134551459U,	// SUB8mi
    134551459U,	// SUB8mr
    201398179U,	// SUB8ri
    471996323U,	// SUB8rm
    201398179U,	// SUB8rr
    603985833U,	// SUBPDrm
    201398185U,	// SUBPDrr
    603985840U,	// SUBPSrm
    201398192U,	// SUBPSrr
    805312439U,	// SUBR_F32m
    872421311U,	// SUBR_F64m
    939530183U,	// SUBR_FI16m
    1017124816U,	// SUBR_FI32m
    547362777U,	// SUBR_FPrST0
    547362784U,	// SUBR_FST0r
    0U,	// SUBR_Fp32m
    0U,	// SUBR_Fp64m
    0U,	// SUBR_Fp64m32
    0U,	// SUBR_Fp80m32
    0U,	// SUBR_Fp80m64
    0U,	// SUBR_FpI16m32
    0U,	// SUBR_FpI16m64
    0U,	// SUBR_FpI16m80
    0U,	// SUBR_FpI32m32
    0U,	// SUBR_FpI32m64
    0U,	// SUBR_FpI32m80
    547362791U,	// SUBR_FrST0
    671094773U,	// SUBSDrm
    671094773U,	// SUBSDrm_Int
    201398261U,	// SUBSDrr
    201398261U,	// SUBSDrr_Int
    738203644U,	// SUBSSrm
    738203644U,	// SUBSSrm_Int
    201398268U,	// SUBSSrr
    201398268U,	// SUBSSrr_Int
    805312515U,	// SUB_F32m
    872421386U,	// SUB_F64m
    939530257U,	// SUB_FI16m
    1017124889U,	// SUB_FI32m
    547362849U,	// SUB_FPrST0
    547362857U,	// SUB_FST0r
    0U,	// SUB_Fp32
    0U,	// SUB_Fp32m
    0U,	// SUB_Fp64
    0U,	// SUB_Fp64m
    0U,	// SUB_Fp64m32
    0U,	// SUB_Fp80
    0U,	// SUB_Fp80m32
    0U,	// SUB_Fp80m64
    0U,	// SUB_FpI16m32
    0U,	// SUB_FpI16m64
    0U,	// SUB_FpI16m80
    0U,	// SUB_FpI32m32
    0U,	// SUB_FpI32m64
    0U,	// SUB_FpI32m80
    547362863U,	// SUB_FrST0
    67115070U,	// SYSCALL
    67115078U,	// SYSENTER
    67115087U,	// SYSEXIT
    67115087U,	// SYSEXIT64
    67115095U,	// SYSRET
    1673530048U,	// TAILJMPd
    1069553758U,	// TAILJMPm
    599788229U,	// TAILJMPr
    599788236U,	// TAILJMPr64
    564795492U,	// TCRETURNdi
    564795492U,	// TCRETURNdi64
    564795492U,	// TCRETURNri
    564795492U,	// TCRETURNri64
    134223984U,	// TEST16mi
    1344411760U,	// TEST16ri
    1277302896U,	// TEST16rm
    1344411760U,	// TEST16rr
    134420599U,	// TEST32mi
    1344411767U,	// TEST32ri
    1411520631U,	// TEST32rm
    1344411767U,	// TEST32rr
    134486142U,	// TEST64mi32
    1344411774U,	// TEST64ri32
    1476401278U,	// TEST64rm
    1344411774U,	// TEST64rr
    134551685U,	// TEST8mi
    1344411781U,	// TEST8ri
    1747064965U,	// TEST8rm
    1344411781U,	// TEST8rr
    2684357504U,	// TLS_addr32
    2751469708U,	// TLS_addr64
    67115166U,	// TRAP
    67115170U,	// TST_F
    0U,	// TST_Fp32
    0U,	// TST_Fp64
    0U,	// TST_Fp80
    1946159744U,	// UCOMISDrm
    1344408192U,	// UCOMISDrr
    2013268617U,	// UCOMISSrm
    1344408201U,	// UCOMISSrr
    551557287U,	// UCOM_FIPr
    551557296U,	// UCOM_FIr
    67115192U,	// UCOM_FPPr
    547363008U,	// UCOM_FPr
    0U,	// UCOM_FpIr32
    0U,	// UCOM_FpIr64
    0U,	// UCOM_FpIr80
    0U,	// UCOM_Fpr32
    0U,	// UCOM_Fpr64
    0U,	// UCOM_Fpr80
    547363016U,	// UCOM_Fr
    603986127U,	// UNPCKHPDrm
    201398479U,	// UNPCKHPDrr
    603986137U,	// UNPCKHPSrm
    201398489U,	// UNPCKHPSrr
    603986147U,	// UNPCKLPDrm
    201398499U,	// UNPCKLPDrr
    603986157U,	// UNPCKLPSrm
    201398509U,	// UNPCKLPSrr
    537573623U,	// VASTART_SAVE_XMM_REGS
    536938640U,	// V_SET0
    536939922U,	// V_SETALLONES
    1543504934U,	// WINCALL64m
    1621099565U,	// WINCALL64pcrel32
    547357734U,	// WINCALL64r
    2111969551U,	// XCHG16rm
    2114066710U,	// XCHG32rm
    2116163869U,	// XCHG64rm
    2122324259U,	// XCHG8rm
    547363114U,	// XCH_F
    134224176U,	// XOR16mi
    134224176U,	// XOR16mi8
    134224176U,	// XOR16mr
    201398576U,	// XOR16ri
    201398576U,	// XOR16ri8
    270670128U,	// XOR16rm
    201398576U,	// XOR16rr
    134418175U,	// XOR32mi
    134418175U,	// XOR32mi8
    134418175U,	// XOR32mr
    201395967U,	// XOR32ri
    201395967U,	// XOR32ri8
    337776383U,	// XOR32rm
    201395967U,	// XOR32rr
    134486326U,	// XOR64mi32
    134486326U,	// XOR64mi8
    134486326U,	// XOR64mr
    201398582U,	// XOR64ri32
    201398582U,	// XOR64ri8
    404887862U,	// XOR64rm
    201398582U,	// XOR64rr
    134549294U,	// XOR8mi
    134549294U,	// XOR8mr
    201396014U,	// XOR8ri
    471994158U,	// XOR8rm
    201396014U,	// XOR8rr
    603981961U,	// XORPDrm
    201394313U,	// XORPDrr
    603981968U,	// XORPSrm
    201394320U,	// XORPSrr
    0U
  };

  const char *AsmStrs = 
    "\000\000PHINODE\000fabs\000adcw\t\000adcl\t\000adcq\t\000adcb\t\000add\t"
    "\000addw\t\000addl\t\000addq\t\000addb\t\000addpd\t\000addps\t\000addsd"
    "\t\000addss\t\000addsubpd\t\000addsubps\t\000fadds\t\000faddl\t\000fiad"
    "ds\t\000fiaddl\t\000faddp\t\000fadd\t\000fadd\t%st(0), \000#ADJCALLSTAC"
    "KDOWN\000#ADJCALLSTACKUP\000andw\t\000andl\t\000andq\t\000andb\t\000and"
    "npd\t\000andnps\t\000andpd\t\000andps\t\000#ATOMADD6432 PSEUDO!\000#ATO"
    "MAND16 PSEUDO!\000#ATOMAND32 PSEUDO!\000#ATOMAND64 PSEUDO!\000#ATOMAND6"
    "432 PSEUDO!\000#ATOMAND8 PSEUDO!\000#ATOMMAX16 PSEUDO!\000#ATOMMAX32 PS"
    "EUDO!\000#ATOMMAX64 PSEUDO!\000#ATOMMIN16 PSEUDO!\000#ATOMMIN32 PSEUDO!"
    "\000#ATOMMIN64 PSEUDO!\000#ATOMNAND16 PSEUDO!\000#ATOMNAND32 PSEUDO!\000"
    "#ATOMNAND64 PSEUDO!\000#ATOMNAND6432 PSEUDO!\000#ATOMNAND8 PSEUDO!\000#"
    "ATOMOR16 PSEUDO!\000#ATOMOR32 PSEUDO!\000#ATOMOR64 PSEUDO!\000#ATOMOR64"
    "32 PSEUDO!\000#ATOMOR8 PSEUDO!\000#ATOMSUB6432 PSEUDO!\000#ATOMSWAP6432"
    " PSEUDO!\000#ATOMUMAX16 PSEUDO!\000#ATOMUMAX32 PSEUDO!\000#ATOMUMAX64 P"
    "SEUDO!\000#ATOMUMIN16 PSEUDO!\000#ATOMUMIN32 PSEUDO!\000#ATOMUMIN64 PSE"
    "UDO!\000#ATOMXOR16 PSEUDO!\000#ATOMXOR32 PSEUDO!\000#ATOMXOR64 PSEUDO!\000"
    "#ATOMXOR6432 PSEUDO!\000#ATOMXOR8 PSEUDO!\000blendpd\t\000blendps\t\000"
    "blendvpd\t%xmm0, \000blendvps\t%xmm0, \000bsfw\t\000bsfl\t\000bsfq\t\000"
    "bsrw\t\000bsrl\t\000bsrq\t\000bswapl\t\000bswapq\t\000btw\t\000btl\t\000"
    "btq\t\000call\t*\000call\t\000cbtw\000cltd\000cltq\000fchs\000clflush\t"
    "\000cmova\t\000cmovae\t\000cmovb\t\000cmovbe\t\000fcmovbe\t\000fcmovb\t"
    "\000cmove\t\000fcmove\t\000cmovg\t\000cmovge\t\000cmovl\t\000cmovle\t\000"
    "fcmovnbe\t\000fcmovnb\t\000cmovne\t\000fcmovne\t\000cmovno\t\000cmovnp\t"
    "\000fcmovnu\t\000cmovns\t\000cmovo\t\000cmovp\t\000fcmovu\t \000cmovs\t"
    "\000#CMOV_FR32 PSEUDO!\000#CMOV_FR64 PSEUDO!\000#CMOV_V1I64 PSEUDO!\000"
    "#CMOV_V2F64 PSEUDO!\000#CMOV_V2I64 PSEUDO!\000#CMOV_V4F32 PSEUDO!\000cm"
    "pw\t\000cmpl\t\000cmpq\t\000cmpb\t\000cmp\000fcos\000cqto\000crc32 \t\000"
    "cvtsd2ss\t\000cvtsi2sdq\t\000cvtsi2sd\t\000cvtsi2ssq\t\000cvtsi2ss\t\000"
    "cvtss2sd\t\000cvttsd2siq\t\000cvttsd2si\t\000cvttss2siq\t\000cvttss2si\t"
    "\000cwtd\000cwtl\000decw\t\000decl\t\000decq\t\000decb\t\000divw\t\000d"
    "ivl\t\000divq\t\000divb\t\000divpd\t\000divps\t\000fdivrs\t\000fdivrl\t"
    "\000fidivrs\t\000fidivrl\t\000fdivp\t\000fdivr\t\000fdiv\t%st(0), \000d"
    "ivsd\t\000divss\t\000fdivs\t\000fdivl\t\000fidivs\t\000fidivl\t\000fdiv"
    "rp\t\000fdiv\t\000fdivr\t%st(0), \000dppd\t\000dpps\t\000.loc\t\000ret\t"
    "#eh_return, addr: \000extractps\t\000fldcw\t\000fnstcw\t\000fnstsw\000#"
    "#FP32_TO_INT16_IN_MEM PSEUDO!\000##FP32_TO_INT32_IN_MEM PSEUDO!\000##FP"
    "32_TO_INT64_IN_MEM PSEUDO!\000##FP64_TO_INT16_IN_MEM PSEUDO!\000##FP64_"
    "TO_INT32_IN_MEM PSEUDO!\000##FP64_TO_INT64_IN_MEM PSEUDO!\000##FP80_TO_"
    "INT16_IN_MEM PSEUDO!\000##FP80_TO_INT32_IN_MEM PSEUDO!\000##FP80_TO_INT"
    "64_IN_MEM PSEUDO!\000##FP_REG_KILL\000movl\t%fs:\000pxor\t\000movapd\t\000"
    "movaps\t\000orpd\t\000orps\t\000xorpd\t\000xorps\t\000movl\t%gs:\000had"
    "dpd\t\000haddps\t\000hsubpd\t\000hsubps\t\000idivw\t\000idivl\t\000idiv"
    "q\t\000idivb\t\000filds\t\000fildl\t\000fildll\t\000imulw\t\000imull\t\000"
    "imulq\t\000imulb\t\000inw\t\000inw\t%dx, %ax\000inl\t\000inl\t%dx, %eax"
    "\000inb\t\000inb\t%dx, %al\000incw\t\000incl\t\000incq\t\000incb\t\000i"
    "nsertps\t\000int\t\000int 3\000fisttps\t\000fisttpl\t\000fisttpll\t\000"
    "fists\t\000fistl\t\000fistps\t\000fistpl\t\000fistpll\t\000comisd\t\000"
    "comiss\t\000cvtdq2pd\t\000cvtdq2ps\t\000cvtpd2dq\t\000cvtpd2pi\t\000cvt"
    "pd2ps\t\000cvtpi2pd\t\000cvtpi2ps\t\000cvtps2dq\t\000cvtps2pd\t\000cvtp"
    "s2pi\t\000cvtsd2siq\t\000cvtsd2si\t\000cvtss2siq\t\000cvtss2si\t\000cvt"
    "tpd2dq\t\000cvttpd2pi\t\000cvttps2dq\t\000cvttps2pi\t\000ucomisd\t\000u"
    "comiss\t\000ja\t\000jae\t\000jb\t\000jbe\t\000jcxz\t\000je\t\000jg\t\000"
    "jge\t\000jl\t\000jle\t\000jmp\t\000jmpl\t*\000jmpq\t*\000jne\t\000jno\t"
    "\000jnp\t\000jns\t\000jo\t\000jp\t\000js\t\000lahf\000lock\n\tcmpxchgw\t"
    "\000lock\n\tcmpxchgl\t\000lock\n\tcmpxchgq\t\000lock\n\tcmpxchgb\t\000l"
    "ock\n\tcmpxchg8b\t\000lddqu\t\000ldmxcsr\t\000fldz\000fld1\000flds\t\000"
    "fldl\t\000fldt\t\000fld\t\000leaw\t\000leal\t\000leaq\t\000leave\000lfe"
    "nce\000lock\n\taddw\t\000lock\n\taddl\t\000lock\n\taddq\t\000lock\n\tad"
    "db\t\000lock\n\tdecw\t\000lock\n\tdecl\t\000lock\n\tdecq\t\000lock\n\td"
    "ecb\t\000lock\n\tincw\t\000lock\n\tincl\t\000lock\n\tincq\t\000lock\n\t"
    "incb\t\000lock\n\tsubw\t\000lock\n\tsubl\t\000lock\n\tsubq\t\000lock\n\t"
    "subb\t\000lock\n\txaddw\t\000lock\n\txaddl\t\000lock\n\txadd\t\000lock\n"
    "\txaddb\t\000maskmovdqu\t\000maxpd\t\000maxps\t\000maxsd\t\000maxss\t\000"
    "mfence\000minpd\t\000minps\t\000minsd\t\000minss\t\000emms\000femms\000"
    "maskmovq\t\000movd\t\000movdq2q\t\000movntq\t\000movq2dq\t\000movq\t\000"
    "packssdw\t\000packsswb\t\000packuswb\t\000paddb\t\000paddd\t\000paddq\t"
    "\000paddsb\t\000paddsw\t\000paddusb\t\000paddusw\t\000paddw\t\000pandn\t"
    "\000pand\t\000pavgb\t\000pavgw\t\000pcmpeqb\t\000pcmpeqd\t\000pcmpeqw\t"
    "\000pcmpgtb\t\000pcmpgtd\t\000pcmpgtw\t\000pextrw\t\000pinsrw\t\000pmad"
    "dwd\t\000pmaxsw\t\000pmaxub\t\000pminsw\t\000pminub\t\000pmovmskb\t\000"
    "pmulhuw\t\000pmulhw\t\000pmullw\t\000pmuludq\t\000por\t\000psadbw\t\000"
    "pshufw\t\000pslld\t\000psllq\t\000psllw\t\000psrad\t\000psraw\t\000psrl"
    "d\t\000psrlq\t\000psrlw\t\000psubb\t\000psubd\t\000psubq\t\000psubsb\t\000"
    "psubsw\t\000psubusb\t\000psubusw\t\000psubw\t\000punpckhbw\t\000punpckh"
    "dq\t\000punpckhwd\t\000punpcklbw\t\000punpckldq\t\000punpcklwd\t\000mon"
    "itor\000movw\t\000xorl\t\000movl\t\000movq\t%fs:\000movq\t%gs:\000movab"
    "sq\t\000movb\t\000xorb\t\000movddup\t\000movdqa\t\000movdqu\t\000movhlp"
    "s\t\000movhpd\t\000movhps\t\000movlhps\t\000movlpd\t\000movsd\t\000movl"
    "ps\t\000movss\t\000movmskpd\t\000movmskps\t\000movntdqa\t\000movntdq\t\000"
    "movnti\t\000movntpd\t\000movntps\t\000movshdup\t\000movsldup\t\000movsb"
    "l\t\000movswl\t\000movswq\t\000movslq\t\000movsbq\t\000movupd\t\000movu"
    "ps\t\000movzbl\t\000movzwl\t\000mpsadbw\t\000mulw\t\000mull\t\000mulq\t"
    "\000mulb\t\000mulpd\t\000mulps\t\000mulsd\t\000mulss\t\000fmuls\t\000fm"
    "ull\t\000fimuls\t\000fimull\t\000fmulp\t\000fmul\t\000fmul\t%st(0), \000"
    "mwait\000negw\t\000negl\t\000negq\t\000negb\t\000nop\000nopl\t\000notw\t"
    "\000notl\t\000notq\t\000notb\t\000orw\t\000orl\t\000orq\t\000orb\t\000o"
    "utw\t%ax, \000outw\t%ax, %dx\000outl\t%eax, \000outl\t%eax, %dx\000outb"
    "\t%al, \000outb\t%al, %dx\000pabsb\t\000pabsd\t\000pabsw\t\000packusdw\t"
    "\000palignr\t\000pblendvb\t%xmm0, \000pblendw\t\000pcmpeqq\t\000pcmpest"
    "ri\t\000#PCMPESTRM128rm PSEUDO!\000#PCMPESTRM128rr PSEUDO!\000pcmpestrm"
    "\t\000pcmpgtq\t\000pcmpistri\t\000#PCMPISTRM128rm PSEUDO!\000#PCMPISTRM"
    "128rr PSEUDO!\000pcmpistrm\t\000pextrb\t\000pextrd\t\000pextrq\t\000pha"
    "ddd\t\000phaddsw\t\000phaddw\t\000phminposuw\t\000phsubd\t\000phsubsw\t"
    "\000phsubw\t\000pinsrb\t\000pinsrd\t\000pinsrq\t\000pmaddubsw\t\000pmax"
    "sb\t\000pmaxsd\t\000pmaxud\t\000pmaxuw\t\000pminsb\t\000pminsd\t\000pmi"
    "nud\t\000pminuw\t\000pmovsxbd\t\000pmovsxbq\t\000pmovsxbw\t\000pmovsxdq"
    "\t\000pmovsxwd\t\000pmovsxwq\t\000pmovzxbd\t\000pmovzxbq\t\000pmovzxbw\t"
    "\000pmovzxdq\t\000pmovzxwd\t\000pmovzxwq\t\000pmuldq\t\000pmulhrsw\t\000"
    "pmulld\t\000popl\t\000popq\t\000popf\000prefetchnta\t\000prefetcht0\t\000"
    "prefetcht1\t\000prefetcht2\t\000pshufb\t\000pshufd\t\000pshufhw\t\000ps"
    "huflw\t\000psignb\t\000psignd\t\000psignw\t\000pslldq\t\000psrldq\t\000"
    "ptest \t\000punpckhqdq\t\000punpcklqdq\t\000pushl\t\000pushq\t\000pushf"
    "\000rcpps\t\000rcpss\t\000rdtsc\000rep;movsb\000rep;movsl\000rep;movsq\000"
    "rep;movsw\000rep;stosb\000rep;stosl\000rep;stosq\000rep;stosw\000ret\000"
    "ret\t\000rolw\t\000rolw\t%cl, \000roll\t\000roll\t%cl, \000rolq\t\000ro"
    "lq\t%cl, \000rolb\t\000rolb\t%cl, \000rorw\t\000rorw\t%cl, \000rorl\t\000"
    "rorl\t%cl, \000rorq\t\000rorq\t%cl, \000rorb\t\000rorb\t%cl, \000roundp"
    "d\t\000roundps\t\000roundsd\t\000roundss\t\000rsqrtps\t\000rsqrtss\t\000"
    "sahf\000sarw\t\000sarw\t%cl, \000sarl\t\000sarl\t%cl, \000sarq\t\000sar"
    "q\t%cl, \000sarb\t\000sarb\t%cl, \000sbbw\t\000sbbl\t\000sbbq\t\000sbbb"
    "\t\000setae\t\000seta\t\000setbe\t\000setb\t\000sete\t\000setge\t\000se"
    "tg\t\000setle\t\000setl\t\000setne\t\000setno\t\000setnp\t\000setns\t\000"
    "seto\t\000setp\t\000sets\t\000sfence\000shlw\t\000shlw\t%cl, \000shll\t"
    "\000shll\t%cl, \000shlq\t\000shlq\t%cl, \000shlb\t\000shlb\t%cl, \000sh"
    "ldw\t%cl, \000shldw\t\000shldl\t%cl, \000shldl\t\000shldq\t%cl, \000shl"
    "dq\t\000shrw\t\000shrw\t%cl, \000shrl\t\000shrl\t%cl, \000shrq\t\000shr"
    "q\t%cl, \000shrb\t\000shrb\t%cl, \000shrdw\t%cl, \000shrdw\t\000shrdl\t"
    "%cl, \000shrdl\t\000shrdq\t%cl, \000shrdq\t\000shufpd\t\000shufps\t\000"
    "fsin\000sqrtpd\t\000sqrtps\t\000sqrtsd\t\000sqrtss\t\000fsqrt\000stmxcs"
    "r\t\000fsts\t\000fstl\t\000fstps\t\000fstpl\t\000fstpt\t\000fstp\t\000f"
    "st\t\000subw\t\000subl\t\000subq\t\000subb\t\000subpd\t\000subps\t\000f"
    "subrs\t\000fsubrl\t\000fisubrs\t\000fisubrl\t\000fsubp\t\000fsubr\t\000"
    "fsub\t%st(0), \000subsd\t\000subss\t\000fsubs\t\000fsubl\t\000fisubs\t\000"
    "fisubl\t\000fsubrp\t\000fsub\t\000fsubr\t%st(0), \000syscall\000sysente"
    "r\000sysexit\000sysret\000jmp\t*\000#TC_RETURN \000testw\t\000testl\t\000"
    "testq\t\000testb\t\000.byte\t0x66; leaq\t\000ud2\000ftst\000fucomip\t\000"
    "fucomi\t\000fucompp\000fucomp\t\000fucom\t\000unpckhpd\t\000unpckhps\t\000"
    "unpcklpd\t\000unpcklps\t\000#VASTART_SAVE_XMM_REGS \000xchgw\t\000xchgl"
    "\t\000xchg\t\000xchgb\t\000fxch\t\000xorw\t\000xorq\t\000";

  processDebugLoc(MI->getDebugLoc());


#ifndef NO_ASM_WRITER_BOILERPLATE
  if (MI->getOpcode() == TargetInstrInfo::INLINEASM) {
    O << "\t";
    printInlineAsm(MI);
    return;
  } else if (MI->isLabel()) {
    printLabel(MI);
    return;
  } else if (MI->getOpcode() == TargetInstrInfo::DECLARE) {
    printDeclare(MI);
    return;
  } else if (MI->getOpcode() == TargetInstrInfo::IMPLICIT_DEF) {
    printImplicitDef(MI);
    return;
  }


#endif
  O << "\t";

  // Emit the opcode for the instruction.
  unsigned Bits = OpInfo[MI->getOpcode()];
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 8191);


  // Fragment 0 encoded into 6 bits for 42 unique commands.
  switch ((Bits >> 26) & 63) {
  default:   // unreachable.
  case 0:
    return;
    break;
  case 1:
    // PHI, ABS_F, ADJCALLSTACKDOWN32, ADJCALLSTACKDOWN64, ADJCALLSTACKUP32, ...
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 2:
    // ADC16mi, ADC16mi8, ADC16mr, ADC32mi, ADC32mi8, ADC32mr, ADC64mi32, ADC...
    printOperand(MI, 5); 
    break;
  case 3:
    // ADC16ri, ADC16ri8, ADC16rr, ADC32ri, ADC32ri8, ADC32rr, ADC64ri32, ADC...
    printOperand(MI, 2); 
    break;
  case 4:
    // ADC16rm, ADD16rm, AND16rm, CMOVA16rm, CMOVAE16rm, CMOVB16rm, CMOVBE16r...
    printi16mem(MI, 2); 
    O << ", "; 
    break;
  case 5:
    // ADC32rm, ADD32rm, AND32rm, CMOVA32rm, CMOVAE32rm, CMOVB32rm, CMOVBE32r...
    printi32mem(MI, 2); 
    O << ", "; 
    break;
  case 6:
    // ADC64rm, ADD64rm, AND64rm, CMOVA64rm, CMOVAE64rm, CMOVB64rm, CMOVBE64r...
    printi64mem(MI, 2); 
    O << ", "; 
    break;
  case 7:
    // ADC8rm, ADD8rm, AND8rm, CRC32m8, OR8rm, SBB8rm, SUB8rm, XOR8rm
    printi8mem(MI, 2); 
    O << ", "; 
    break;
  case 8:
    // ADD16i16, ADD32i32, ADD8i8, ADD_FPrST0, ADD_FST0r, ADD_FrST0, BSWAP32r...
    printOperand(MI, 0); 
    break;
  case 9:
    // ADDPDrm, ADDPSrm, ADDSUBPDrm, ADDSUBPSrm, ANDNPDrm, ANDNPSrm, ANDPDrm,...
    printf128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 10:
    // ADDSDrm, ADDSDrm_Int, DIVSDrm, DIVSDrm_Int, Int_CVTSD2SSrm, MAXSDrm, M...
    printf64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 11:
    // ADDSSrm, ADDSSrm_Int, DIVSSrm, DIVSSrm_Int, Int_CVTSS2SDrm, MAXSSrm, M...
    printf32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 12:
    // ADD_F32m, DIVR_F32m, DIV_F32m, LD_F32m, MUL_F32m, ST_F32m, ST_FP32m, S...
    printf32mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 13:
    // ADD_F64m, DIVR_F64m, DIV_F64m, LD_F64m, MUL_F64m, ST_F64m, ST_FP64m, S...
    printf64mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 14:
    // ADD_FI16m, DEC16m, DEC64_16m, DIV16m, DIVR_FI16m, DIV_FI16m, FLDCW16m,...
    printi16mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 15:
    // ADD_FI32m, CALL32m, DEC32m, DEC64_32m, DIV32m, DIVR_FI32m, DIV_FI32m, ...
    printi32mem(MI, 0); 
    break;
  case 16:
    // BLENDPDrmi, BLENDPSrmi, DPPDrmi, DPPSrmi, INSERTPSrm, MMX_PINSRWrmi, M...
    printOperand(MI, 7); 
    O << ", "; 
    break;
  case 17:
    // BLENDPDrri, BLENDPSrri, DPPDrri, DPPSrri, INSERTPSrr, MMX_PINSRWrri, M...
    printOperand(MI, 3); 
    O << ", "; 
    printOperand(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 18:
    // BLENDVPDrm0, BLENDVPSrm0, PACKSSDWrm, PACKSSWBrm, PACKUSDWrm, PACKUSWB...
    printi128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 19:
    // BSF16rm, BSR16rm, CMP16rm, MOV16rm, MOVSX32rm16, MOVSX64rm16, MOVZX32r...
    printi16mem(MI, 1); 
    O << ", "; 
    break;
  case 20:
    // BSF16rr, BSF32rr, BSF64rr, BSR16rr, BSR32rr, BSR64rr, BT16ri8, BT16rr,...
    printOperand(MI, 1); 
    O << ", "; 
    break;
  case 21:
    // BSF32rm, BSR32rm, CMP32rm, CVTSI2SDrm, CVTSI2SSrm, FS_MOV32rm, GS_MOV3...
    printi32mem(MI, 1); 
    O << ", "; 
    break;
  case 22:
    // BSF64rm, BSR64rm, CMP64rm, CVTSI2SD64rm, CVTSI2SS64rm, Int_CVTDQ2PDrm,...
    printi64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 23:
    // CALL64m, DEC64m, DIV64m, IDIV64m, ILD_F64m, IMUL64m, INC64m, ISTT_FP64...
    printi64mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 24:
    // CALL64pcrel32, CALLpcrel32, JA, JA8, JAE, JAE8, JB, JB8, JBE, JBE8, JC...
    print_pcrel_imm(MI, 0); 
    break;
  case 25:
    // CLFLUSH, DEC8m, DIV8m, IDIV8m, IMUL8m, INC8m, LOCK_DEC8m, LOCK_INC8m, ...
    printi8mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 26:
    // CMP8rm, MOV8rm, MOV8rm_NOREX, MOVSX16rm8, MOVSX32rm8, MOVSX64rm8, MOVZ...
    printi8mem(MI, 1); 
    O << ", "; 
    break;
  case 27:
    // CMPPDrmi, CMPPSrmi, CMPSDrm, CMPSSrm, Int_CMPSDrm, Int_CMPSSrm
    printSSECC(MI, 7); 
    break;
  case 28:
    // CMPPDrri, CMPPSrri, CMPSDrr, CMPSSrr, Int_CMPSDrr, Int_CMPSSrr
    printSSECC(MI, 3); 
    break;
  case 29:
    // CVTSD2SSrm, CVTTSD2SI64rm, CVTTSD2SIrm, Int_CVTPS2PDrm, Int_CVTPS2PIrm...
    printf64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 30:
    // CVTSS2SDrm, CVTTSS2SI64rm, CVTTSS2SIrm, Int_CVTSS2SI64rm, Int_CVTSS2SI...
    printf32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 31:
    // EXTRACTPSmr, IMUL16rmi, IMUL16rmi8, IMUL32rmi, IMUL32rmi8, IMUL64rmi32...
    printOperand(MI, 6); 
    O << ", "; 
    break;
  case 32:
    // FsMOVAPDrm, FsMOVAPSrm, Int_COMISDrm, Int_COMISSrm, Int_CVTPD2DQrm, In...
    printf128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 33:
    // Int_CVTDQ2PSrm, LDDQUrm, MOVDQArm, MOVDQUrm, MOVDQUrm_Int, MOVNTDQArm,...
    printi128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 34:
    // LD_F80m, ST_FP80m
    printf80mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 35:
    // LEA32r
    printlea32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 36:
    // LEA64_32r
    printlea64_32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 37:
    // LEA64r
    printlea64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 38:
    // MOV16r0
    printOperand(MI, 0, "subreg32"); 
    O << ", "; 
    printOperand(MI, 0, "subreg32"); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 39:
    // MOVPC32r
    printPICLabel(MI, 1); 
    O << "\n\tpopl\t"; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 40:
    // TLS_addr32
    printlea32mem(MI, 0); 
    O << ", %eax; call\t___tls_get_addr@PLT"; 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 41:
    // TLS_addr64
    printlea64mem(MI, 0); 
    O << "(%rip), %rdi; .word\t0x6666; rex64; call\t__tls_get_addr@PLT"; 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  }


  // Fragment 1 encoded into 5 bits for 31 unique commands.
  switch ((Bits >> 21) & 31) {
  default:   // unreachable.
  case 0:
    // ADC16mi, ADC16mi8, ADC16mr, ADC16ri, ADC16ri8, ADC16rr, ADC32mi, ADC32...
    O << ", "; 
    break;
  case 1:
    // ADC16rm, ADC32rm, ADC64rm, ADC8rm, ADD16rm, ADD32rm, ADD64rm, ADD8rm, ...
    printOperand(MI, 0); 
    break;
  case 2:
    // ADD16i16, IN16ri
    O << ", %ax"; 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 3:
    // ADD32i32, IN32ri
    O << ", %eax"; 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 4:
    // ADD8i8, IN8ri
    O << ", %al"; 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 5:
    // ADD_FI32m, ADD_FPrST0, ADD_FST0r, ADD_FrST0, BSWAP32r, BSWAP64r, CALL3...
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 6:
    // BLENDPDrmi, BLENDPSrmi, DPPDrmi, DPPSrmi, MPSADBWrmi, PALIGNR128rm, PB...
    printi128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 7:
    // CMOVBE_F, CMOVB_F, CMOVE_F, CMOVNBE_F, CMOVNB_F, CMOVNE_F, CMOVNP_F, C...
    O << ", %st(0)"; 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 8:
    // CMPPDrmi, CMPPDrri
    O << "pd\t"; 
    break;
  case 9:
    // CMPPSrmi, CMPPSrri
    O << "ps\t"; 
    break;
  case 10:
    // CMPSDrm, CMPSDrr, Int_CMPSDrm, Int_CMPSDrr
    O << "sd\t"; 
    break;
  case 11:
    // CMPSSrm, CMPSSrr, Int_CMPSSrm, Int_CMPSSrr
    O << "ss\t"; 
    break;
  case 12:
    // CRC32m16, CRC32m32, CRC32m8, CRC64m64
    printOperand(MI, 1); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 13:
    // DWARF_LOC, TCRETURNdi, TCRETURNdi64, TCRETURNri, TCRETURNri64
    O << ' '; 
    break;
  case 14:
    // EXTRACTPSmr, PEXTRBmr, PEXTRDmr, PEXTRQmr, PEXTRWmr, SHLD16mri8, SHLD3...
    printOperand(MI, 5); 
    O << ", "; 
    break;
  case 15:
    // IMUL16rmi, IMUL16rmi8, LXADD16, XCHG16rm
    printi16mem(MI, 1); 
    break;
  case 16:
    // IMUL32rmi, IMUL32rmi8, LXADD32, XCHG32rm
    printi32mem(MI, 1); 
    break;
  case 17:
    // IMUL64rmi32, IMUL64rmi8, LXADD64, MMX_PSHUFWmi, XCHG64rm
    printi64mem(MI, 1); 
    break;
  case 18:
    // INSERTPSrm, ROUNDSSm_Int
    printf32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 19:
    // LCMPXCHG64
    O << ','; 
    printi64mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 20:
    // LXADD8, XCHG8rm
    printi8mem(MI, 1); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 21:
    // MMX_PINSRWrmi, PINSRWrmi
    printi16mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 22:
    // MOV64ri64i32, MOVSX16rm8, MOVSX16rr8, MOVZX16rm8, MOVZX16rr8, MOVZX64r...
    printOperand(MI, 0, "subreg32"); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 23:
    // PALIGNR64rm, PINSRQrm
    printi64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 24:
    // PCMPESTRIArm, PCMPESTRICrm, PCMPESTRIOrm, PCMPESTRISrm, PCMPESTRIZrm, ...
    printi128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 25:
    // PINSRBrm
    printi8mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 26:
    // PINSRDrm
    printi32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 27:
    // ROUNDPDm_Int, ROUNDPSm_Int
    printf128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 28:
    // ROUNDSDm_Int
    printf64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 29:
    // SHUFPDrmi, SHUFPSrmi
    printf128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 30:
    // TAILJMPd, TAILJMPm, TAILJMPr, TAILJMPr64
    O << "  # TAILCALL"; 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 17 unique commands.
  switch ((Bits >> 16) & 31) {
  default:   // unreachable.
  case 0:
    // ADC16mi, ADC16mi8, ADC16mr, ADD16mi, ADD16mi8, ADD16mr, AND16mi, AND16...
    printi16mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 1:
    // ADC16ri, ADC16ri8, ADC16rr, ADC32ri, ADC32ri8, ADC32rr, ADC64ri32, ADC...
    printOperand(MI, 0); 
    break;
  case 2:
    // ADC16rm, ADC32rm, ADC64rm, ADC8rm, ADD16rm, ADD32rm, ADD64rm, ADD8rm, ...
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 3:
    // ADC32mi, ADC32mi8, ADC32mr, ADD32mi, ADD32mi8, ADD32mr, AND32mi, AND32...
    printi32mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 4:
    // ADC64mi32, ADC64mi8, ADC64mr, ADD64mi32, ADD64mi8, ADD64mr, AND64mi32,...
    printi64mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 5:
    // ADC8mi, ADC8mr, ADD8mi, ADD8mr, AND8mi, AND8mr, CMP8mi, CMP8mr, LCMPXC...
    printi8mem(MI, 0); 
    break;
  case 6:
    // CMPPDrmi, CMPPSrmi
    printf128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 7:
    // CMPPDrri, CMPPSrri, CMPSDrr, CMPSSrr, Int_CMPSDrr, Int_CMPSSrr
    printOperand(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 8:
    // CMPSDrm, Int_CMPSDrm
    printf64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 9:
    // CMPSSrm, Int_CMPSSrm
    printf32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 10:
    // CRC32r16, CRC32r32, CRC32r8, CRC64r64, EXTRACTPSrr, IMUL16rri, IMUL16r...
    printOperand(MI, 1); 
    break;
  case 11:
    // EXTRACTPSmr, MOVPS2SSmr, MOVSSmr
    printf32mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 12:
    // IMUL16rmi, IMUL16rmi8, IMUL32rmi, IMUL32rmi8, IMUL64rmi32, IMUL64rmi8,...
    O << ", "; 
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 13:
    // MOV8rm_NOREX, MOV8rr_NOREX, MOVZX32_NOREXrm8, MOVZX32_NOREXrr8
    O << "  # NOREX"; 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 14:
    // MOVAPDmr, MOVAPSmr, MOVNTDQmr, MOVUPDmr, MOVUPDmr_Int, MOVUPSmr, MOVUP...
    printf128mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 15:
    // MOVDQAmr, MOVDQUmr, MOVDQUmr_Int, MOVNTPDmr, MOVNTPSmr
    printi128mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 16:
    // MOVHPDmr, MOVHPSmr, MOVLPDmr, MOVLPSmr, MOVPD2SDmr, MOVSDmr
    printf64mem(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  }


  // Fragment 3 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 14) & 3) {
  default:   // unreachable.
  case 0:
    // ADC16ri, ADC16ri8, ADC16rr, ADC32ri, ADC32ri8, ADC32rr, ADC64ri32, ADC...
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 1:
    // DWARF_LOC
    O << ' '; 
    printOperand(MI, 1); 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  case 2:
    // EXTRACTPSrr, IMUL16rri, IMUL16rri8, IMUL32rri, IMUL32rri8, IMUL64rri32...
    O << ", "; 
    break;
  case 3:
    // MOV8mr_NOREX
    O << "  # NOREX"; 
    EmitComments(*MI);

    O << "\n"; 
    return;
    break;
  }


  // Fragment 4 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 13) & 1) {
    // VASTART_SAVE_XMM_REGS
    printOperand(MI, 2); 
    EmitComments(*MI);

    O << "\n"; 
    return;
  } else {
    // EXTRACTPSrr, IMUL16rri, IMUL16rri8, IMUL32rri, IMUL32rri8, IMUL64rri32...
    printOperand(MI, 0); 
    EmitComments(*MI);

    O << "\n"; 
    return;
  }

  return;
}
