//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Instruction Enum Values
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

namespace llvm {

namespace SystemZ {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    DBG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    DECLARE	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    ADC32ri	= 11,
    ADC32rr	= 12,
    ADC64ri32	= 13,
    ADC64rr	= 14,
    ADD32ri	= 15,
    ADD32ri16	= 16,
    ADD32rm	= 17,
    ADD32rmy	= 18,
    ADD32rr	= 19,
    ADD64ri16	= 20,
    ADD64ri32	= 21,
    ADD64rm	= 22,
    ADD64rr	= 23,
    ADDE32rr	= 24,
    ADDE64rr	= 25,
    ADJCALLSTACKDOWN	= 26,
    ADJCALLSTACKUP	= 27,
    AND32ri	= 28,
    AND32rilh16	= 29,
    AND32rill16	= 30,
    AND32rm	= 31,
    AND32rmy	= 32,
    AND32rr	= 33,
    AND64rihh16	= 34,
    AND64rihi32	= 35,
    AND64rihl16	= 36,
    AND64rilh16	= 37,
    AND64rill16	= 38,
    AND64rilo32	= 39,
    AND64rm	= 40,
    AND64rr	= 41,
    BSWAP32mr	= 42,
    BSWAP32rm	= 43,
    BSWAP32rr	= 44,
    BSWAP64mr	= 45,
    BSWAP64rm	= 46,
    BSWAP64rr	= 47,
    CALLi	= 48,
    CALLr	= 49,
    CMP32ri	= 50,
    CMP32rm	= 51,
    CMP32rmy	= 52,
    CMP32rr	= 53,
    CMP64ri32	= 54,
    CMP64rm	= 55,
    CMP64rr	= 56,
    CMPSX64rm32	= 57,
    CMPSX64rr32	= 58,
    FABS32rr	= 59,
    FABS64rr	= 60,
    FADD32rm	= 61,
    FADD32rr	= 62,
    FADD64rm	= 63,
    FADD64rr	= 64,
    FBCONVF64	= 65,
    FBCONVG64	= 66,
    FCMP32rm	= 67,
    FCMP32rr	= 68,
    FCMP64rm	= 69,
    FCMP64rr	= 70,
    FCONVFP32	= 71,
    FCONVFP32r64	= 72,
    FCONVFP64	= 73,
    FCONVFP64r32	= 74,
    FCONVGR32	= 75,
    FCONVGR32r64	= 76,
    FCONVGR64	= 77,
    FCONVGR64r32	= 78,
    FCOPYSIGN32	= 79,
    FCOPYSIGN64	= 80,
    FDIV32rm	= 81,
    FDIV32rr	= 82,
    FDIV64rm	= 83,
    FDIV64rr	= 84,
    FEXT32m64	= 85,
    FEXT32r64	= 86,
    FLOGR64	= 87,
    FMADD32rm	= 88,
    FMADD32rr	= 89,
    FMADD64rm	= 90,
    FMADD64rr	= 91,
    FMOV32mr	= 92,
    FMOV32mry	= 93,
    FMOV32rm	= 94,
    FMOV32rmy	= 95,
    FMOV32rr	= 96,
    FMOV64mr	= 97,
    FMOV64mry	= 98,
    FMOV64rm	= 99,
    FMOV64rmy	= 100,
    FMOV64rr	= 101,
    FMSUB32rm	= 102,
    FMSUB32rr	= 103,
    FMSUB64rm	= 104,
    FMSUB64rr	= 105,
    FMUL32rm	= 106,
    FMUL32rr	= 107,
    FMUL64rm	= 108,
    FMUL64rr	= 109,
    FNABS32rr	= 110,
    FNABS64rr	= 111,
    FNEG32rr	= 112,
    FNEG64rr	= 113,
    FROUND64r32	= 114,
    FSQRT32rm	= 115,
    FSQRT32rr	= 116,
    FSQRT64rm	= 117,
    FSQRT64rr	= 118,
    FSUB32rm	= 119,
    FSUB32rr	= 120,
    FSUB64rm	= 121,
    FSUB64rr	= 122,
    JE	= 123,
    JH	= 124,
    JHE	= 125,
    JL	= 126,
    JLE	= 127,
    JLH	= 128,
    JMP	= 129,
    JMPr	= 130,
    JNE	= 131,
    JNH	= 132,
    JNHE	= 133,
    JNL	= 134,
    JNLE	= 135,
    JNLH	= 136,
    JNO	= 137,
    JO	= 138,
    LA64r	= 139,
    LA64rm	= 140,
    LD_Fp032	= 141,
    LD_Fp064	= 142,
    MOV128mr	= 143,
    MOV128r0_even	= 144,
    MOV128rm	= 145,
    MOV128rr	= 146,
    MOV16mi	= 147,
    MOV32m16r	= 148,
    MOV32m16ry	= 149,
    MOV32m8r	= 150,
    MOV32m8ry	= 151,
    MOV32mi16	= 152,
    MOV32mr	= 153,
    MOV32mrm	= 154,
    MOV32mry	= 155,
    MOV32ri16	= 156,
    MOV32rm	= 157,
    MOV32rmm	= 158,
    MOV32rmy	= 159,
    MOV32rr	= 160,
    MOV64Pmr	= 161,
    MOV64Pmry	= 162,
    MOV64Pr0_even	= 163,
    MOV64Prm	= 164,
    MOV64Prmy	= 165,
    MOV64m16r	= 166,
    MOV64m16ry	= 167,
    MOV64m32r	= 168,
    MOV64m32ry	= 169,
    MOV64m8r	= 170,
    MOV64m8ry	= 171,
    MOV64mi16	= 172,
    MOV64mr	= 173,
    MOV64mrm	= 174,
    MOV64ri16	= 175,
    MOV64ri32	= 176,
    MOV64rihh16	= 177,
    MOV64rihi32	= 178,
    MOV64rihl16	= 179,
    MOV64rilh16	= 180,
    MOV64rill16	= 181,
    MOV64rilo32	= 182,
    MOV64rm	= 183,
    MOV64rmm	= 184,
    MOV64rr	= 185,
    MOV64rrP	= 186,
    MOV8mi	= 187,
    MOV8miy	= 188,
    MOVSX32rm16	= 189,
    MOVSX32rm16y	= 190,
    MOVSX32rm8	= 191,
    MOVSX32rr16	= 192,
    MOVSX32rr8	= 193,
    MOVSX64rm16	= 194,
    MOVSX64rm32	= 195,
    MOVSX64rm8	= 196,
    MOVSX64rr16	= 197,
    MOVSX64rr32	= 198,
    MOVSX64rr8	= 199,
    MOVZX32rm16	= 200,
    MOVZX32rm8	= 201,
    MOVZX64rm16	= 202,
    MOVZX64rm32	= 203,
    MOVZX64rm8	= 204,
    MOVZX64rr32	= 205,
    MUL32ri	= 206,
    MUL32ri16	= 207,
    MUL32rm	= 208,
    MUL32rmy	= 209,
    MUL32rr	= 210,
    MUL64ri16	= 211,
    MUL64ri32	= 212,
    MUL64rm	= 213,
    MUL64rr	= 214,
    MUL64rrP	= 215,
    MULSX64rr32	= 216,
    NEG32rr	= 217,
    NEG64rr	= 218,
    NEG64rr32	= 219,
    NOP	= 220,
    OR32ri	= 221,
    OR32ri16	= 222,
    OR32ri16h	= 223,
    OR32rm	= 224,
    OR32rmy	= 225,
    OR32rr	= 226,
    OR64rihh16	= 227,
    OR64rihi32	= 228,
    OR64rihl16	= 229,
    OR64rilh16	= 230,
    OR64rill16	= 231,
    OR64rilo32	= 232,
    OR64rm	= 233,
    OR64rr	= 234,
    RET	= 235,
    ROTL32rri	= 236,
    ROTL64rri	= 237,
    SBC32ri	= 238,
    SBC32rr	= 239,
    SBC64ri32	= 240,
    SBC64rr	= 241,
    SDIVREM32m	= 242,
    SDIVREM32r	= 243,
    SDIVREM64m	= 244,
    SDIVREM64r	= 245,
    SHL32rri	= 246,
    SHL64rri	= 247,
    SRA32rri	= 248,
    SRA64rri	= 249,
    SRL32rri	= 250,
    SRL64rri	= 251,
    SUB32rm	= 252,
    SUB32rmy	= 253,
    SUB32rr	= 254,
    SUB64rm	= 255,
    SUB64rr	= 256,
    SUBE32rr	= 257,
    SUBE64rr	= 258,
    Select32	= 259,
    Select64	= 260,
    SelectF32	= 261,
    SelectF64	= 262,
    UCMP32ri	= 263,
    UCMP32rm	= 264,
    UCMP32rmy	= 265,
    UCMP32rr	= 266,
    UCMP64ri32	= 267,
    UCMP64rm	= 268,
    UCMP64rr	= 269,
    UCMPZX64rm32	= 270,
    UCMPZX64rr32	= 271,
    UDIVREM32m	= 272,
    UDIVREM32r	= 273,
    UDIVREM64m	= 274,
    UDIVREM64r	= 275,
    UMUL128rrP	= 276,
    UMUL64rrP	= 277,
    XOR32ri	= 278,
    XOR32rm	= 279,
    XOR32rmy	= 280,
    XOR32rr	= 281,
    XOR64rm	= 282,
    XOR64rr	= 283,
    INSTRUCTION_LIST_END = 284
  };
}
} // End llvm namespace 
